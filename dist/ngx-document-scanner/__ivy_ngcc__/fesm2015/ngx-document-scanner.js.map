{"version":3,"file":"ngx-document-scanner.js","sources":["ngx-document-scanner/lib/services/limits.service.ts","ngx-document-scanner/lib/components/draggable-point/ngx-draggable-point.component.ts","ngx-document-scanner/lib/components/filter-menu/ngx-filter-menu.component.ts","ngx-document-scanner/lib/components/shape-outline/ngx-shape-outline.component.ts","ngx-document-scanner/lib/components/image-editor/ngx-doc-scanner.component.ts","ngx-document-scanner/lib/ngx-document-scanner.module.ts","ngx-document-scanner/lib/PublicModels.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {ImageDimensions} from '../PublicModels';\r\nimport {LimitException, XYPosition} from '../PrivateModels';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LimitsService {\r\n\r\n\r\n  private limitDirections: RolesArray = ['left', 'right', 'top', 'bottom'];\r\n  /**\r\n   * stores the crop limits limits\r\n   */\r\n  private _limits = {\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0\r\n  };\r\n  /**\r\n   * stores the array of the draggable points displayed on the crop area\r\n   */\r\n  private _points: Array<PointPositionChange> = [];\r\n  /**\r\n   * stores the pane dimensions\r\n   */\r\n  private _paneDimensions: ImageDimensions;\r\n\r\n  // *********** //\r\n  // Observables //\r\n  // *********** //\r\n  public positions: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>(Array.from(this._points));\r\n  public repositionEvent: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>([]);\r\n  public limits: BehaviorSubject<AreaLimits> = new BehaviorSubject<AreaLimits>(this._limits);\r\n  public paneDimensions: BehaviorSubject<ImageDimensions> = new BehaviorSubject({width: 0, height: 0});\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * set privew pane dimensions\r\n   */\r\n  public setPaneDimensions(dimensions: ImageDimensions) {\r\n    return new Promise((resolve, reject) => {\r\n      this._paneDimensions = dimensions;\r\n      this.paneDimensions.next(dimensions);\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * repositions points externally\r\n   */\r\n  public repositionPoints(positions) {\r\n    this._points = positions;\r\n    positions.forEach(position => {\r\n      this.positionChange(position);\r\n    });\r\n    this.repositionEvent.next(positions);\r\n  }\r\n\r\n  /**\r\n   * updates limits and point positions and calls next on the observables\r\n   * @param positionChangeData - position change event data\r\n   */\r\n  public positionChange(positionChangeData: PointPositionChange) {\r\n    // update positions according to current position change\r\n    this.updatePosition(positionChangeData);\r\n\r\n    // for each direction:\r\n    // 1. filter the _points that have a role as the direction's limit\r\n    // 2. for top and left find max x | y values, and min for right and bottom\r\n    this.limitDirections.forEach(direction => {\r\n      const relevantPoints = this._points.filter(point => {\r\n        return point.roles.includes(direction);\r\n      })\r\n      .map((point: PointPositionChange) => {\r\n        return point[this.getDirectionAxis(direction)];\r\n      });\r\n      let limit;\r\n      if (direction === 'top' || direction === 'left') {\r\n        limit = Math.max(...relevantPoints);\r\n      }\r\n      if (direction === 'right' || direction === 'bottom') {\r\n        limit = Math.min(...relevantPoints);\r\n      }\r\n      this._limits[direction] = limit;\r\n    });\r\n\r\n    this.limits.next(this._limits);\r\n    this.positions.next(Array.from(this._points));\r\n  }\r\n\r\n  /**\r\n   * updates the position of the point\r\n   * @param positionChange - position change event data\r\n   */\r\n  public updatePosition(positionChange: PointPositionChange) {\r\n    // finds the current position of the point by it's roles, than splices it for the new position or pushes it if it's not yet in the array\r\n    const index = this._points.findIndex(point => {\r\n      return this.compareArray(positionChange.roles, point.roles);\r\n    });\r\n    if (index === -1) {\r\n      this._points.push(positionChange);\r\n    } else {\r\n      this._points.splice(index, 1, positionChange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check if a position change event exceeds the limits\r\n   * @param positionChange - position change event data\r\n   * @returns LimitException0\r\n   */\r\n  public exceedsLimit(positionChange: PointPositionChange): LimitException {\r\n    const pointLimits = this.limitDirections.filter(direction => {\r\n      return !positionChange.roles.includes(direction);\r\n    });\r\n\r\n    const limitException: LimitException = {\r\n      exceeds: false,\r\n      resetCoefficients: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      resetCoordinates: {\r\n        x: positionChange.x,\r\n        y: positionChange.y\r\n      }\r\n    };\r\n\r\n    // limit directions are the opposite sides of the point's roles\r\n    pointLimits.forEach(direction => {\r\n      const directionAxis = this.getDirectionAxis(direction);\r\n      if (direction === 'top' || direction === 'left') {\r\n        if (positionChange[directionAxis] < this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = 1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      } else if (direction === 'right' || direction === 'bottom') {\r\n        if (positionChange[directionAxis] > this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = -1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (limitException.resetCoefficients.x !== 0 || limitException.resetCoefficients.y !== 0) {\r\n      limitException.exceeds = true;\r\n    }\r\n\r\n    return limitException;\r\n  }\r\n\r\n  /**\r\n   * rotate crop tool points clockwise\r\n   * @param resizeRatios - ratio between the new dimensions and the previous\r\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\r\n   * @param initialPositions - current positions before rotation\r\n   */\r\n  public rotateClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\r\n    // convert positions to ratio between position to initial pane dimension\r\n    initialPositions = initialPositions.map(point => {\r\n      return new PositionChangeData({\r\n        x: point.x / initialPreviewDimensions.width,\r\n        y: point.y / initialPreviewDimensions.height,\r\n      }, point.roles);\r\n    });\r\n    this.repositionPoints(initialPositions.map(point => {\r\n      return this.rotateCornerClockwise(point);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * rotate crop tool points anti-clockwise\r\n   * @param resizeRatios - ratio between the new dimensions and the previous\r\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\r\n   * @param initialPositions - current positions before rotation\r\n   */\r\n  public rotateAntiClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\r\n    // convert positions to ratio between position to initial pane dimension\r\n    initialPositions = initialPositions.map(point => {\r\n      return new PositionChangeData({\r\n        x: point.x / initialPreviewDimensions.width,\r\n        y: point.y / initialPreviewDimensions.height,\r\n      }, point.roles);\r\n    });\r\n    this.repositionPoints(initialPositions.map(point => {\r\n      return this.rotateCornerAntiClockwise(point);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * returns the corner positions after a 90 degrees clockwise rotation\r\n   */\r\n  private rotateCornerClockwise(corner: PointPositionChange): PointPositionChange {\r\n    const rotated: PointPositionChange = {\r\n      x: this._paneDimensions.width * (1 - corner.y),\r\n      y: this._paneDimensions.height * corner.x,\r\n      roles: []\r\n    };\r\n    // rotates corner according to order\r\n    const order: Array<RolesArray> = [\r\n      ['bottom', 'left'],\r\n      ['top', 'left'],\r\n      ['top', 'right'],\r\n      ['bottom', 'right'],\r\n      ['bottom', 'left']\r\n    ];\r\n    rotated.roles = order[order.findIndex(roles => {\r\n      return this.compareArray(roles, corner.roles);\r\n    }) + 1];\r\n    return rotated;\r\n  }\r\n\r\n  /**\r\n   * returns the corner positions after a 90 degrees anti-clockwise rotation\r\n   */\r\n  private rotateCornerAntiClockwise(corner: PointPositionChange): PointPositionChange {\r\n    const rotated: PointPositionChange = {\r\n      x: this._paneDimensions.width * corner.y,\r\n      y: this._paneDimensions.height * (1 - corner.x),\r\n      roles: []\r\n    };\r\n    // rotates corner according to order\r\n    const order: Array<RolesArray> = [\r\n      ['bottom', 'left'],\r\n      ['bottom', 'right'],\r\n      ['top', 'right'],\r\n      ['top', 'left'],\r\n      ['bottom', 'left']\r\n    ];\r\n    rotated.roles = order[order.findIndex(roles => {\r\n      return this.compareArray(roles, corner.roles);\r\n    }) + 1];\r\n    return rotated;\r\n  }\r\n\r\n  /**\r\n   * checks if two array contain the same values\r\n   * @param array1 - array 1\r\n   * @param array2 - array 2\r\n   * @returns boolean\r\n   */\r\n  public compareArray(array1: Array<string>, array2: Array<string>): boolean {\r\n    return array1.every((element) => {\r\n      return array2.includes(element);\r\n    }) && array1.length === array2.length;\r\n  }\r\n\r\n  private getDirectionAxis(direction) {\r\n    return {\r\n      left: 'x',\r\n      right: 'x',\r\n      top: 'y',\r\n      bottom: 'y'\r\n    }[direction];\r\n  }\r\n}\r\n\r\n\r\nexport interface PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n}\r\n\r\nexport interface AreaLimits {\r\n  top: number;\r\n  bottom: number;\r\n  right: number;\r\n  left: number;\r\n}\r\n\r\nexport type RolesArray = Array<Direction>;\r\n\r\nexport class PositionChangeData implements PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n\r\n  constructor(position: XYPosition, roles: RolesArray) {\r\n    this.x = position.x;\r\n    this.y = position.y;\r\n    this.roles = roles;\r\n  }\r\n}\r\n\r\nexport type Direction = 'left' | 'right' | 'top' | 'bottom';\r\n","import {AfterViewInit, Component, HostListener, Input} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\nimport {LimitException, XYPosition} from '../../PrivateModels';\r\n\r\n@Component({\r\n  selector: 'ngx-draggable-point',\r\n  templateUrl: './ngx-draggable-point.component.html',\r\n  styleUrls: ['./ngx-draggable-point.component.scss']\r\n})\r\nexport class NgxDraggablePointComponent implements AfterViewInit {\r\n  @Input() width = 10;\r\n  @Input() height = 10;\r\n  @Input() color = '#3cabe2';\r\n  @Input() shape: 'rect' | 'circle' = 'rect';\r\n  @Input() pointOptions: 'rect' | 'circle' = 'rect';\r\n  @Input() limitRoles: Array<'left' | 'right' | 'top' | 'bottom'>;\r\n  @Input() startPosition: XYPosition;\r\n  @Input() container: HTMLElement;\r\n  @Input() private _currentPosition: XYPosition;\r\n  hover = false;\r\n  clicking = false;\r\n  position: XYPosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  private _paneDimensions: ImageDimensions;\r\n  resetPosition: XYPosition;\r\n\r\n  constructor(private limitsService: LimitsService) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    Object.keys(this.pointOptions).forEach(key => {\r\n      this[key] = this.pointOptions[key];\r\n    });\r\n    // subscribe to pane dimensions changes\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      if (dimensions.width > 0 && dimensions.width > 0) {\r\n        this._paneDimensions = {\r\n          width: dimensions.width,\r\n          height: dimensions.height\r\n        };\r\n        this.position = this.getInitialPosition(dimensions);\r\n        this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n      }\r\n    });\r\n    // subscribe to external reposition events\r\n    this.limitsService.repositionEvent.subscribe(positions => {\r\n      if (positions.length > 0) {\r\n        this.externalReposition(positions);\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  mouseUp(event) {\r\n    this.clicking = false;\r\n    this.hover = false;\r\n  }\r\n\r\n  /**\r\n   * returns a css style object for the point\r\n   */\r\n  pointStyle() {\r\n    return {\r\n      width: this.width + 'px',\r\n      height: this.height + 'px',\r\n      'background-color': this.color,\r\n      'border-radius': this.shape === 'circle' ? '100%' : 0,\r\n      position: 'absolute'\r\n    };\r\n  }\r\n\r\n  hoverPointStyle() {\r\n    return {\r\n      ...this.pointStyle(),\r\n      cursor: 'grab',\r\n      'background-color': '#CCFF33'\r\n    };\r\n  }\r\n\r\n  clickingPointStyle() {\r\n    return {\r\n      ...this.hoverPointStyle(),\r\n      cursor: 'grabbing'\r\n    };\r\n  }\r\n\r\n  getStyle() {\r\n    if (this.clicking) {\r\n      return this.clickingPointStyle();\r\n    } else if (this.hover) {\r\n      return this.hoverPointStyle();\r\n    }\r\n\r\n    return this.pointStyle();\r\n  }\r\n\r\n  /**\r\n   * registers a position change on the limits service, and adjusts position if necessary\r\n   * @param position - the current position of the point\r\n   */\r\n  positionChange(position: XYPosition) {\r\n    const positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      // if exceeds limits, reposition\r\n      this.resetPosition = limitException.resetCoordinates;\r\n    } else {\r\n      this.limitsService.positionChange(positionChangeData);\r\n      this._currentPosition = position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * adjusts the position of the point after a limit exception\r\n   */\r\n  private adjustPosition(limitException: LimitException) {\r\n    const newPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    Object.keys(this.startPosition).forEach(axis => {\r\n      newPosition[axis] = limitException.resetCoordinates[axis] + limitException.resetCoefficients[axis];\r\n    });\r\n    this.position = newPosition;\r\n    this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n  }\r\n\r\n  /**\r\n   * called on movement end, checks if last position exceeded the limits ad adjusts\r\n   */\r\n  movementEnd(position: XYPosition) {\r\n    let positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      this.resetPosition = limitException.resetCoordinates;\r\n      if (limitException.exceeds) {\r\n        this.adjustPosition(limitException);\r\n        positionChangeData = new PositionChangeData(this.position, this.limitRoles);\r\n        this.limitsService.updatePosition(positionChangeData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculates the initial positions of the point by it's roles\r\n   * @param dimensions - dimensions of the pane in which the point is located\r\n   */\r\n  private getInitialPosition(dimensions: ImageDimensions) {\r\n    return {\r\n      x: this.limitRoles.includes('left') ? 0 : dimensions.width - this.width / 2,\r\n      y: this.limitRoles.includes('top') ? 0 : dimensions.height - this.height / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * repositions the point after an external reposition event\r\n   * @param positions - an array of all points on the pane\r\n   */\r\n  private externalReposition(positions: Array<PointPositionChange>) {\r\n    positions.forEach(position => {\r\n      if (this.limitsService.compareArray(this.limitRoles, position.roles)) {\r\n        position = this.enforcePaneLimits(position);\r\n        this.position = {\r\n          x: position.x,\r\n          y: position.y\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * returns a new point position if the movement exceeded the pane limit\r\n   */\r\n  private enforcePaneLimits(position: PointPositionChange): PointPositionChange {\r\n    if (this._paneDimensions.width === 0 || this._paneDimensions.height === 0) {\r\n      return position;\r\n    } else {\r\n      if (position.x > this._paneDimensions.width) {\r\n        position.x = this._paneDimensions.width;\r\n      }\r\n      if (position.x < 0) {\r\n        position.x = 1;\r\n      }\r\n      if (position.y > this._paneDimensions.height) {\r\n        position.y = this._paneDimensions.height;\r\n      }\r\n      if (position.y < 0) {\r\n        position.y = 1;\r\n      }\r\n    }\r\n    return position;\r\n  }\r\n}\r\n\r\n","import {Component, EventEmitter, Inject, Output} from '@angular/core';\r\nimport {EditorActionButton} from '../../PrivateModels';\r\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef} from '@angular/material/bottom-sheet';\r\n\r\n@Component({\r\n  selector: 'ngx-filter-menu',\r\n  templateUrl: './ngx-filter-menu.component.html',\r\n})\r\nexport class NgxFilterMenuComponent {\r\n  filterOptions: Array<EditorActionButton> = [\r\n    {\r\n      name: 'default',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W'\r\n    },\r\n    {\r\n      name: 'bw2',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 2'\r\n    },\r\n    {\r\n      name: 'bw3',\r\n      icon: 'blur_on',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 3'\r\n    },\r\n    {\r\n      name: 'magic_color',\r\n      icon: 'filter_vintage',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Magic Color'\r\n    },\r\n    {\r\n      name: 'original',\r\n      icon: 'crop_original',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Original'\r\n    },\r\n  ];\r\n  @Output() filterSelected: EventEmitter<string> = new EventEmitter();\r\n  selectOption(optionName) {\r\n    this.data.filter = optionName;\r\n    this.bottomSheetRef.dismiss();\r\n  }\r\n\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<NgxFilterMenuComponent>,\r\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: any\r\n              ) {}\r\n\r\n}\r\n","import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\n\r\n@Component({\r\n  selector: 'ngx-shape-outine',\r\n  templateUrl: './ngx-shape-outline.component.html',\r\n})\r\nexport class NgxShapeOutlineComponent implements AfterViewInit {\r\n\r\n  @Input() color = '#3cabe2';\r\n  @Input() weight: number;\r\n  @Input() dimensions: ImageDimensions;\r\n  @ViewChild('outline') canvas;\r\n\r\n  private _points: Array<PointPositionChange>;\r\n  private _sortedPoints: Array<PointPositionChange>;\r\n  constructor(private limitsService: LimitsService) {}\r\n\r\n  ngAfterViewInit() {\r\n    // init drawing canvas dimensions\r\n    this.canvas.nativeElement.width = this.dimensions.width;\r\n    this.canvas.nativeElement.height = this.dimensions.height;\r\n    this.limitsService.positions.subscribe(positions => {\r\n      if (positions.length === 4) {\r\n        this._points = positions;\r\n        this.sortPoints();\r\n        this.clearCanvas();\r\n        this.drawShape();\r\n      }\r\n    });\r\n    // subscribe to changes in the pane's dimensions\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      this.clearCanvas();\r\n      this.canvas.nativeElement.width = dimensions.width;\r\n      this.canvas.nativeElement.height = dimensions.height;\r\n    });\r\n    // subscribe to reposition events\r\n    this.limitsService.repositionEvent.subscribe( positions => {\r\n      if (positions.length === 4) {\r\n        setTimeout( () => {\r\n          this.clearCanvas();\r\n          this.sortPoints();\r\n          this.drawShape();\r\n        }, 10);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * clears the shape canvas\r\n   */\r\n  private clearCanvas() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\r\n  }\r\n\r\n  /**\r\n   * sorts the array of points according to their clockwise alignment\r\n   */\r\n  private sortPoints() {\r\n    const _points = Array.from(this._points);\r\n    const sortedPoints = [];\r\n\r\n    const sortOrder = {\r\n      vertical: ['top', 'top', 'bottom', 'bottom'],\r\n      horizontal: ['left', 'right', 'right', 'left']\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const roles = Array.from([sortOrder.vertical[i], sortOrder.horizontal[i]]);\r\n      sortedPoints.push(_points.filter((point) => {\r\n        return this.limitsService.compareArray(point.roles, roles);\r\n      })[0]);\r\n\r\n    }\r\n    this._sortedPoints = sortedPoints;\r\n  }\r\n\r\n  /**\r\n   * draws a line between the points according to their order\r\n   */\r\n  private drawShape() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineWidth = this.weight;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    this._sortedPoints.forEach((point, index) => {\r\n      if (index === 0) {\r\n        ctx.moveTo(point.x, point.y);\r\n      }\r\n      if (index !== this._sortedPoints.length - 1) {\r\n        const nextPoint = this._sortedPoints[index + 1];\r\n        ctx.lineTo(nextPoint.x, nextPoint.y);\r\n      } else {\r\n        ctx.closePath();\r\n      }\r\n    });\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData, RolesArray} from '../../services/limits.service';\r\nimport {MatBottomSheet} from '@angular/material/bottom-sheet';\r\nimport {NgxFilterMenuComponent} from '../filter-menu/ngx-filter-menu.component';\r\nimport {EditorActionButton, PointOptions, PointShape} from '../../PrivateModels';\r\n// import {NgxOpenCVService} from '../../services/ngx-opencv.service';\r\nimport {DocScannerConfig, ImageDimensions, OpenCVState} from '../../PublicModels';\r\nimport {NgxOpenCVService} from 'ngx-opencv';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\ndeclare var cv: any;\r\n\r\n@Component({\r\n  selector: 'ngx-doc-scanner',\r\n  templateUrl: './ngx-doc-scanner.component.html',\r\n  styleUrls: ['./ngx-doc-scanner.component.scss']\r\n})\r\nexport class NgxDocScannerComponent implements OnInit, OnChanges {\r\n  value = 0;\r\n\r\n  /**\r\n   * editor config object\r\n   */\r\n  options: ImageEditorConfig;\r\n  // ************* //\r\n  // EDITOR CONFIG //\r\n  // ************* //\r\n  /**\r\n   * an array of action buttons displayed on the editor screen\r\n   */\r\n  private editorButtons: Array<EditorActionButton>;\r\n\r\n  /**\r\n   * returns an array of buttons according to the editor mode\r\n   */\r\n  get displayedButtons() {\r\n    return this.editorButtons.filter(button => {\r\n      return button.mode === this.mode;\r\n    });\r\n  }\r\n\r\n  private maxPreviewHeight: number;\r\n  /**\r\n   * max width of the preview area\r\n   */\r\n  private maxPreviewWidth: number;\r\n  /**\r\n   * dimensions of the image container\r\n   */\r\n  imageDivStyle: any;\r\n  /**\r\n   * editor div style\r\n   */\r\n  editorStyle: { [key: string]: string | number };\r\n\r\n  // ************* //\r\n  // EDITOR STATE //\r\n  // ************* //\r\n  /**\r\n   * state of opencv loading\r\n   */\r\n  private cvState: string;\r\n  /**\r\n   * true after the image is loaded and preview is displayed\r\n   */\r\n  imageLoaded = false;\r\n  /**\r\n   * editor mode\r\n   */\r\n  mode: 'crop' | 'color' = 'crop';\r\n  /**\r\n   * filter selected by the user, returned by the filter selector bottom sheet\r\n   */\r\n  private selectedFilter = 'default';\r\n\r\n  // ******************* //\r\n  // OPERATION VARIABLES //\r\n  // ******************* //\r\n  /**\r\n   * viewport dimensions\r\n   */\r\n  private screenDimensions: ImageDimensions;\r\n  /**\r\n   * image dimensions\r\n   */\r\n  private imageDimensions: ImageDimensions = {\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  /**\r\n   * dimensions of the preview pane\r\n   */\r\n  previewDimensions: ImageDimensions;\r\n  /**\r\n   * ration between preview image and original\r\n   */\r\n  private imageResizeRatio: number;\r\n  /**\r\n   * stores the original image for reset purposes\r\n   */\r\n  private originalImage: File;\r\n  /**\r\n   * stores the edited image\r\n   */\r\n  private editedImage: HTMLCanvasElement;\r\n  /**\r\n   * stores the preview image as canvas\r\n   */\r\n  @ViewChild('PreviewCanvas', {read: ElementRef}) private previewCanvas: ElementRef;\r\n  /**\r\n   * an array of points used by the crop tool\r\n   */\r\n  private points: Array<PointPositionChange>;\r\n\r\n  // ************** //\r\n  // EVENT EMITTERS //\r\n  // ************** //\r\n  /**\r\n   * optional binding to the exit button of the editor\r\n   */\r\n  @Output() exitEditor: EventEmitter<string> = new EventEmitter<string>();\r\n  /**\r\n   * fires on edit completion\r\n   */\r\n  @Output() editResult: EventEmitter<Blob> = new EventEmitter<Blob>();\r\n  /**\r\n   * emits errors, can be linked to an error handler of choice\r\n   */\r\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\r\n  /**\r\n   * emits the loading status of the cv module.\r\n   */\r\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /**\r\n   * emits true when processing is done, false when completed\r\n   */\r\n  @Output() processing: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  // ****** //\r\n  // INPUTS //\r\n  // ****** //\r\n  /**\r\n   * set image for editing\r\n   * @param file - file from form input\r\n   */\r\n  @Input() set file(file: File) {\r\n    if (file) {\r\n      setTimeout(() => {\r\n        this.processing.emit(true);\r\n      }, 5);\r\n      this.imageLoaded = false;\r\n      this.originalImage = file;\r\n      this.ngxOpenCv.cvState.subscribe(\r\n        async (cvState: OpenCVState) => {\r\n          if (cvState.ready) {\r\n            // read file to image & canvas\r\n            await this.loadFile(file);\r\n            this.processing.emit(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * editor configuration object\r\n   */\r\n  @Input() config: DocScannerConfig;\r\n\r\n  constructor(private ngxOpenCv: NgxOpenCVService, private limitsService: LimitsService,\r\n              private bottomSheet: MatBottomSheet, private sanitizer: DomSanitizer) {\r\n    this.screenDimensions = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n    // subscribe to status of cv module\r\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCVState) => {\r\n      this.cvState = cvState.state;\r\n      this.ready.emit(cvState.ready);\r\n      if (cvState.error) {\r\n        this.error.emit(new Error('error loading cv'));\r\n      } else if (cvState.loading) {\r\n        this.processing.emit(true);\r\n      } else if (cvState.ready) {\r\n        this.processing.emit(false);\r\n      }\r\n    });\r\n\r\n    // subscribe to positions of crop tool\r\n    this.limitsService.positions.subscribe(points => {\r\n      this.points = points;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editorButtons = [\r\n      {\r\n        name: 'exit',\r\n        action: () => {\r\n          this.exitEditor.emit('canceled');\r\n        },\r\n        icon: 'arrow_back',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        action: this.rotateImage.bind(this),\r\n        icon: 'rotate_right',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'done_crop',\r\n        action: this.doneCrop(),\r\n        icon: 'done',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'back',\r\n        action: this.undo(),\r\n        icon: 'arrow_back',\r\n        type: 'fab',\r\n        mode: 'color'\r\n      },\r\n      {\r\n        name: 'filter',\r\n        action: () => {\r\n          if (this.config.filterEnable) {\r\n            return this.chooseFilters();\r\n          }\r\n        },\r\n        icon: 'photo_filter',\r\n        type: 'fab',\r\n        mode: this.config.filterEnable ? 'color' : 'disabled'\r\n      },\r\n      {\r\n        name: 'upload',\r\n        action: this.exportImage.bind(this),\r\n        icon: 'cloud_upload',\r\n        type: 'fab',\r\n        mode: 'color'\r\n      },\r\n    ];\r\n\r\n    // set options from config object\r\n    this.options = new ImageEditorConfig(this.config);\r\n    // set export image icon\r\n    this.editorButtons.forEach(button => {\r\n      if (button.name === 'upload') {\r\n        button.icon = this.options.exportImageIcon;\r\n      }\r\n    });\r\n    this.maxPreviewWidth = this.options.maxPreviewWidth;\r\n    this.maxPreviewHeight = this.options.maxPreviewHeight;\r\n    this.editorStyle = this.options.editorStyle;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.config) {\r\n      if (!changes.config.previousValue) {\r\n        return;\r\n      }\r\n      if (changes.config.currentValue.thresholdInfo.thresh !== changes.config.previousValue.thresholdInfo.thresh) {\r\n        this.loadFile(this.originalImage);\r\n      }\r\n      let updatePreview = false;\r\n      if (changes.config.currentValue.maxPreviewWidth !== changes.config.previousValue.maxPreviewWidth) {\r\n        this.maxPreviewWidth = changes.config.currentValue.maxPreviewWidth;\r\n        updatePreview = true;\r\n      }\r\n      if (changes.config.currentValue.maxPreviewHeight !== changes.config.previousValue.maxPreviewHeight) {\r\n        this.maxPreviewHeight = changes.config.currentValue.maxPreviewHeight;\r\n        updatePreview = true;\r\n      }\r\n      if (changes.config.currentValue.editorDimensions !== changes.config.previousValue.editorDimensions) {\r\n        const obj = {...this.editorStyle};\r\n        Object.assign(obj, changes.config.currentValue.editorDimensions);\r\n        this.editorStyle = obj;\r\n        updatePreview = true;\r\n      }\r\n      if (updatePreview) {\r\n        this.doubleRotate();\r\n      }\r\n    }\r\n  }\r\n\r\n  // ***************************** //\r\n  // editor action buttons methods //\r\n  // ***************************** //\r\n\r\n  /**\r\n   * emits the exitEditor event\r\n   */\r\n  exit() {\r\n    this.exitEditor.emit('canceled');\r\n  }\r\n\r\n  getMode(): string {\r\n    return this.mode;\r\n  }\r\n\r\n  async doneCrop() {\r\n    this.mode = 'color';\r\n    await this.transform();\r\n    if (this.config.filterEnable) {\r\n      await this.applyFilter(true);\r\n    }\r\n  }\r\n\r\n  undo() {\r\n    this.mode = 'crop';\r\n    this.loadFile(this.originalImage);\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter, and when done emits the resulted image\r\n   */\r\n  async exportImage() {\r\n    await this.applyFilter(false);\r\n    if (this.options.maxImageDimensions) {\r\n      this.resize(this.editedImage)\r\n      .then(resizeResult => {\r\n        resizeResult.toBlob((blob) => {\r\n          this.editResult.emit(blob);\r\n          this.processing.emit(false);\r\n        }, 'image/jpeg', 0.8);\r\n      });\r\n    } else {\r\n      this.editedImage.toBlob((blob) => {\r\n        this.editResult.emit(blob);\r\n        this.processing.emit(false);\r\n      }, 'image/jpeg', 0.8);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * open the bottom sheet for selecting filters, and applies the selected filter in preview mode\r\n   */\r\n  private chooseFilters() {\r\n    const data = {filter: this.selectedFilter};\r\n    const bottomSheetRef = this.bottomSheet.open(NgxFilterMenuComponent, {\r\n      data: data\r\n    });\r\n    bottomSheetRef.afterDismissed().subscribe(() => {\r\n      this.selectedFilter = data.filter;\r\n      this.applyFilter(true);\r\n    });\r\n\r\n  }\r\n\r\n  // *************************** //\r\n  // File Input & Output Methods //\r\n  // *************************** //\r\n  /**\r\n   * load image from input field\r\n   */\r\n  private loadFile(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      try {\r\n        await this.readImage(file);\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      try {\r\n        await this.showPreview();\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      // set pane limits\r\n      // show points\r\n      this.imageLoaded = true;\r\n      await this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n      setTimeout(async () => {\r\n        await this.detectContours();\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 15);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * read image from File object\r\n   */\r\n  private readImage(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      let imageSrc;\r\n      try {\r\n        imageSrc = await readFile();\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n      const img = new Image();\r\n      if (this.editedImage) {\r\n        console.log('clearing old edited image...');\r\n        this.editedImage.remove();\r\n      }\r\n      img.onload = async () => {\r\n        // set edited image canvas and dimensions\r\n        this.editedImage = <HTMLCanvasElement>document.createElement('canvas');\r\n        this.editedImage.width = img.width;\r\n        this.editedImage.height = img.height;\r\n        const ctx = this.editedImage.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n        // resize image if larger than max image size\r\n        const width = img.width > img.height ? img.height : img.width;\r\n        if (width > this.options.maxImageDimensions.width) {\r\n          this.editedImage = await this.resize(this.editedImage);\r\n        }\r\n        this.imageDimensions.width = this.editedImage.width;\r\n        this.imageDimensions.height = this.editedImage.height;\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        resolve();\r\n      };\r\n      img.src = imageSrc;\r\n    });\r\n\r\n    /**\r\n     * read file from input field\r\n     */\r\n    function readFile() {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (err) => {\r\n          reject(err);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  // ************************ //\r\n  // Image Processing Methods //\r\n  // ************************ //\r\n  /**\r\n   * rotate image 90 degrees\r\n   */\r\n  rotateImage(clockwise = true) {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        this.rotate(clockwise);\r\n\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  doubleRotate() {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        this.rotate(true);\r\n        this.rotate(false);\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  rotate(clockwise = true) {\r\n    const dst = cv.imread(this.editedImage);\r\n    // const dst = new cv.Mat();\r\n    cv.transpose(dst, dst);\r\n    if (clockwise) {\r\n      cv.flip(dst, dst, 1);\r\n    } else {\r\n      cv.flip(dst, dst, 0);\r\n    }\r\n\r\n    cv.imshow(this.editedImage, dst);\r\n    // src.delete();\r\n    dst.delete();\r\n    // save current preview dimensions and positions\r\n    const initialPreviewDimensions = {width: 0, height: 0};\r\n    Object.assign(initialPreviewDimensions, this.previewDimensions);\r\n    const initialPositions = Array.from(this.points);\r\n    // get new dimensions\r\n    // set new preview pane dimensions\r\n    this.setPreviewPaneDimensions(this.editedImage);\r\n    // get preview pane resize ratio\r\n    const previewResizeRatios = {\r\n      width: this.previewDimensions.width / initialPreviewDimensions.width,\r\n      height: this.previewDimensions.height / initialPreviewDimensions.height\r\n    };\r\n    // set new preview pane dimensions\r\n\r\n    if (clockwise) {\r\n      this.limitsService.rotateClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\r\n    } else {\r\n      this.limitsService.rotateAntiClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * detects the contours of the document and\r\n   **/\r\n  private detectContours(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        // load the image and compute the ratio of the old height to the new height, clone it, and resize it\r\n        // const processingResizeRatio = 0.5;\r\n        const src = cv.imread(this.editedImage);\r\n        const dst = cv.Mat.zeros(src.rows, src.cols, cv.CV_8UC3);\r\n        const ksize = new cv.Size(5, 5);\r\n        // convert the image to grayscale, blur it, and find edges in the image\r\n        cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\r\n        cv.GaussianBlur(src, src, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        // cv.Canny(src, src, 75, 200);\r\n        // find contours\r\n\r\n        if (this.config.thresholdInfo.thresholdType === 'standard') {\r\n          cv.threshold(src, src, this.config.thresholdInfo.thresh, this.config.thresholdInfo.maxValue, cv.THRESH_BINARY);\r\n        } else if (this.config.thresholdInfo.thresholdType === 'adaptive_mean') {\r\n          cv.adaptiveThreshold(src, src, this.config.thresholdInfo.maxValue, cv.ADAPTIVE_THRESH_MEAN_C,\r\n            cv.THRESH_BINARY, this.config.thresholdInfo.blockSize, this.config.thresholdInfo.c);\r\n        } else if (this.config.thresholdInfo.thresholdType === 'adaptive_gaussian') {\r\n          cv.adaptiveThreshold(src, src, this.config.thresholdInfo.maxValue, cv.ADAPTIVE_THRESH_GAUSSIAN_C,\r\n            cv.THRESH_BINARY, this.config.thresholdInfo.blockSize, this.config.thresholdInfo.c);\r\n        }\r\n\r\n        const contours = new cv.MatVector();\r\n        const hierarchy = new cv.Mat();\r\n        cv.findContours(src, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\r\n        const cnt = contours.get(4);\r\n        if (!cnt) {\r\n          this.processing.emit(false);\r\n          return;\r\n        }\r\n        // console.log('----------UNIQUE RECTANGLES FROM ALL CONTOURS----------');\r\n        const rects = [];\r\n        for (let i = 0; i < contours.size(); i++) {\r\n          const cn = contours.get(i);\r\n          const r = cv.minAreaRect(cn);\r\n          let add = true;\r\n          if (r.size.height < 50 || r.size.width < 50\r\n            || r.angle === 90 || r.angle === 180 || r.angle === 0\r\n            || r.angle === -90 || r.angle === -180\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          for (let j = 0; j < rects.length; j++) {\r\n            if (\r\n              rects[j].angle === r.angle\r\n              && rects[j].center.x === r.center.x && rects[j].center.y === r.center.y\r\n              && rects[j].size.width === r.size.width && rects[j].size.height === r.size.height\r\n            ) {\r\n              add = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (add) {\r\n            rects.push(r);\r\n          } else {\r\n            try {\r\n              r.delete();\r\n            } catch (e) {\r\n            }\r\n          }\r\n        }\r\n\r\n        let rect2 = cv.minAreaRect(cnt);\r\n        for (let i = 0; i < rects.length; i++) {\r\n          if (((rects[i].size.width * rects[i].size.height) > (rect2.size.width * rect2.size.height)\r\n            && !(rects[i].angle === 90 || rects[i].angle === 180 || rects[i].angle === 0\r\n              || rects[i].angle === -90 || rects[i].angle === -180) && ((rects[i].angle > 85 || rects[i].angle < 5)))\r\n          ) {\r\n            rect2 = rects[i];\r\n          }\r\n        }\r\n        const vertices = cv.RotatedRect.points(rect2);\r\n        for (let i = 0; i < 4; i++) {\r\n          vertices[i].x = vertices[i].x * this.imageResizeRatio;\r\n          vertices[i].y = vertices[i].y * this.imageResizeRatio;\r\n        }\r\n\r\n        const rect = cv.boundingRect(src);\r\n\r\n        src.delete();\r\n        hierarchy.delete();\r\n        contours.delete();\r\n        // transform the rectangle into a set of points\r\n        Object.keys(rect).forEach(key => {\r\n          rect[key] = rect[key] * this.imageResizeRatio;\r\n        });\r\n\r\n        let contourCoordinates: PositionChangeData[];\r\n\r\n        const firstRoles: RolesArray = [this.isTop(vertices[0], [vertices[1], vertices[2], vertices[3]]) ? 'top' : 'bottom'];\r\n        const secondRoles: RolesArray = [this.isTop(vertices[1], [vertices[0], vertices[2], vertices[3]]) ? 'top' : 'bottom'];\r\n        const thirdRoles: RolesArray = [this.isTop(vertices[2], [vertices[0], vertices[1], vertices[3]]) ? 'top' : 'bottom'];\r\n        const fourthRoles: RolesArray = [this.isTop(vertices[3], [vertices[0], vertices[2], vertices[1]]) ? 'top' : 'bottom'];\r\n\r\n        const roles = [firstRoles, secondRoles, thirdRoles, fourthRoles];\r\n        const ts = [];\r\n        const bs = [];\r\n\r\n        for (let i = 0; i < roles.length; i++) {\r\n          if (roles[i][0] === 'top') {\r\n            ts.push(i);\r\n          } else {\r\n            bs.push(i);\r\n          }\r\n        }\r\n\r\n        dst.delete();\r\n        cnt.delete();\r\n\r\n        try {\r\n          if (this.isLeft(vertices[ts[0]], vertices[ts[1]])) {\r\n            roles[ts[0]].push('left');\r\n            roles[ts[1]].push('right');\r\n          } else {\r\n            roles[ts[1]].push('right');\r\n            roles[ts[0]].push('left');\r\n          }\r\n\r\n          if (this.isLeft(vertices[bs[0]], vertices[bs[1]])) {\r\n            roles[bs[0]].push('left');\r\n            roles[bs[1]].push('right');\r\n          } else {\r\n            roles[bs[1]].push('left');\r\n            roles[bs[0]].push('right');\r\n          }\r\n        } catch (e) {\r\n          this.processing.emit(false);\r\n          return;\r\n\r\n        }\r\n\r\n        if (this.config.useRotatedRectangle\r\n          && this.pointsAreNotTheSame(vertices)\r\n        ) {\r\n          contourCoordinates = [\r\n            new PositionChangeData({x: vertices[0].x, y: vertices[0].y}, firstRoles),\r\n            new PositionChangeData({x: vertices[1].x, y: vertices[1].y}, secondRoles),\r\n            new PositionChangeData({x: vertices[2].x, y: vertices[2].y}, thirdRoles),\r\n            new PositionChangeData({x: vertices[3].x, y: vertices[3].y}, fourthRoles),\r\n          ];\r\n        } else {\r\n          contourCoordinates = [\r\n            new PositionChangeData({x: rect.x, y: rect.y}, ['left', 'top']),\r\n            new PositionChangeData({x: rect.x + rect.width, y: rect.y}, ['right', 'top']),\r\n            new PositionChangeData({x: rect.x + rect.width, y: rect.y + rect.height}, ['right', 'bottom']),\r\n            new PositionChangeData({x: rect.x, y: rect.y + rect.height}, ['left', 'bottom']),\r\n          ];\r\n        }\r\n\r\n\r\n        this.limitsService.repositionPoints(contourCoordinates);\r\n        // this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  isTop(coordinate, otherVertices): boolean {\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < otherVertices.length; i++) {\r\n      if (coordinate.y < otherVertices[i].y) {\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count >= 2;\r\n\r\n  }\r\n\r\n  isLeft(coordinate, secondCoordinate): boolean {\r\n    return coordinate.x < secondCoordinate.x;\r\n  }\r\n\r\n  private pointsAreNotTheSame(vertices: any): boolean {\r\n    return !(vertices[0].x === vertices[1].x && vertices[1].x === vertices[2].x && vertices[2].x === vertices[3].x &&\r\n      vertices[0].y === vertices[1].y && vertices[1].y === vertices[2].y && vertices[2].y === vertices[3].y);\r\n  }\r\n\r\n  /**\r\n   * apply perspective transform\r\n   */\r\n  private transform(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const dst = cv.imread(this.editedImage);\r\n\r\n        // create source coordinates matrix\r\n        const sourceCoordinates = [\r\n          this.getPoint(['top', 'left']),\r\n          this.getPoint(['top', 'right']),\r\n          this.getPoint(['bottom', 'right']),\r\n          this.getPoint(['bottom', 'left'])\r\n        ].map(point => {\r\n          return [point.x / this.imageResizeRatio, point.y / this.imageResizeRatio];\r\n        });\r\n\r\n        // get max width\r\n        const bottomWidth = this.getPoint(['bottom', 'right']).x - this.getPoint(['bottom', 'left']).x;\r\n        const topWidth = this.getPoint(['top', 'right']).x - this.getPoint(['top', 'left']).x;\r\n        const maxWidth = Math.max(bottomWidth, topWidth) / this.imageResizeRatio;\r\n        // get max height\r\n        const leftHeight = this.getPoint(['bottom', 'left']).y - this.getPoint(['top', 'left']).y;\r\n        const rightHeight = this.getPoint(['bottom', 'right']).y - this.getPoint(['top', 'right']).y;\r\n        const maxHeight = Math.max(leftHeight, rightHeight) / this.imageResizeRatio;\r\n        // create dest coordinates matrix\r\n        const destCoordinates = [\r\n          [0, 0],\r\n          [maxWidth - 1, 0],\r\n          [maxWidth - 1, maxHeight - 1],\r\n          [0, maxHeight - 1]\r\n        ];\r\n\r\n        // convert to open cv matrix objects\r\n        const Ms = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...sourceCoordinates));\r\n        const Md = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...destCoordinates));\r\n        const transformMatrix = cv.getPerspectiveTransform(Ms, Md);\r\n        // set new image size\r\n        const dsize = new cv.Size(maxWidth, maxHeight);\r\n        // perform warp\r\n        cv.warpPerspective(dst, dst, transformMatrix, dsize, cv.INTER_CUBIC, cv.BORDER_CONSTANT, new cv.Scalar());\r\n        cv.imshow(this.editedImage, dst);\r\n\r\n        dst.delete();\r\n        Ms.delete();\r\n        Md.delete();\r\n        transformMatrix.delete();\r\n\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter to the image\r\n   * @param preview - when true, will not apply the filter to the edited image but only display a preview.\r\n   * when false, will apply to editedImage\r\n   */\r\n  private applyFilter(preview: boolean): Promise<void> {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      // default options\r\n      const options = {\r\n        blur: false,\r\n        th: true,\r\n        thMode: cv.ADAPTIVE_THRESH_MEAN_C,\r\n        thMeanCorrection: 10,\r\n        thBlockSize: 25,\r\n        thMax: 255,\r\n        grayScale: true,\r\n      };\r\n      const dst = cv.imread(this.editedImage);\r\n\r\n      if (!this.config.filterEnable) {\r\n        this.selectedFilter = 'original';\r\n      }\r\n\r\n      switch (this.selectedFilter) {\r\n        case 'original':\r\n          options.th = false;\r\n          options.grayScale = false;\r\n          options.blur = false;\r\n          break;\r\n        case 'magic_color':\r\n          options.grayScale = false;\r\n          break;\r\n        case 'bw2':\r\n          options.thMode = cv.ADAPTIVE_THRESH_GAUSSIAN_C;\r\n          options.thMeanCorrection = 15;\r\n          options.thBlockSize = 15;\r\n          break;\r\n        case 'bw3':\r\n          options.blur = true;\r\n          options.thMeanCorrection = 15;\r\n          break;\r\n      }\r\n\r\n      setTimeout(async () => {\r\n        if (options.grayScale) {\r\n          cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\r\n        }\r\n        if (options.blur) {\r\n          const ksize = new cv.Size(5, 5);\r\n          cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        }\r\n        if (options.th) {\r\n          if (options.grayScale) {\r\n            cv.adaptiveThreshold(dst, dst, options.thMax, options.thMode, cv.THRESH_BINARY, options.thBlockSize, options.thMeanCorrection);\r\n          } else {\r\n            dst.convertTo(dst, -1, 1, 60);\r\n            cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY);\r\n          }\r\n        }\r\n        if (!preview) {\r\n          cv.imshow(this.editedImage, dst);\r\n        }\r\n        await this.showPreview(dst);\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * resize an image to fit constraints set in options.maxImageDimensions\r\n   */\r\n  private resize(image: HTMLCanvasElement): Promise<HTMLCanvasElement> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const src = cv.imread(image);\r\n        const currentDimensions = {\r\n          width: src.size().width,\r\n          height: src.size().height\r\n        };\r\n        const resizeDimensions = {\r\n          width: 0,\r\n          height: 0\r\n        };\r\n        if (currentDimensions.width > this.options.maxImageDimensions.width) {\r\n          resizeDimensions.width = this.options.maxImageDimensions.width;\r\n          resizeDimensions.height = this.options.maxImageDimensions.width / currentDimensions.width * currentDimensions.height;\r\n          if (resizeDimensions.height > this.options.maxImageDimensions.height) {\r\n            resizeDimensions.height = this.options.maxImageDimensions.height;\r\n            resizeDimensions.width = this.options.maxImageDimensions.height / currentDimensions.height * currentDimensions.width;\r\n          }\r\n          const dsize = new cv.Size(Math.floor(resizeDimensions.width), Math.floor(resizeDimensions.height));\r\n          cv.resize(src, src, dsize, 0, 0, cv.INTER_AREA);\r\n          const resizeResult = <HTMLCanvasElement>document.createElement('canvas');\r\n          cv.imshow(resizeResult, src);\r\n          src.delete();\r\n          this.processing.emit(false);\r\n          resolve(resizeResult);\r\n        } else {\r\n          this.processing.emit(false);\r\n          resolve(image);\r\n        }\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * display a preview of the image on the preview canvas\r\n   */\r\n  private showPreview(image?: any) {\r\n    return new Promise((resolve, reject) => {\r\n      let src;\r\n      if (image) {\r\n        src = image;\r\n      } else {\r\n        src = cv.imread(this.editedImage);\r\n      }\r\n      const dst = new cv.Mat();\r\n      const dsize = new cv.Size(0, 0);\r\n      cv.resize(src, dst, dsize, this.imageResizeRatio, this.imageResizeRatio, cv.INTER_AREA);\r\n      cv.imshow(this.previewCanvas.nativeElement, dst);\r\n      src.delete();\r\n      dst.delete();\r\n      try {\r\n        if (image) {\r\n          image.delete();\r\n        }\r\n      } catch (e) {\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  // *************** //\r\n  // Utility Methods //\r\n  // *************** //\r\n  /**\r\n   * set preview canvas dimensions according to the canvas element of the original image\r\n   */\r\n  private setPreviewPaneDimensions(img: HTMLCanvasElement) {\r\n    // set preview pane dimensions\r\n    this.previewDimensions = this.calculateDimensions(img.width, img.height);\r\n    this.previewCanvas.nativeElement.width = this.previewDimensions.width;\r\n    this.previewCanvas.nativeElement.height = this.previewDimensions.height;\r\n    this.imageResizeRatio = this.previewDimensions.width / img.width;\r\n    this.imageDivStyle = {\r\n      width: this.previewDimensions.width + this.options.cropToolDimensions.width + 'px',\r\n      height: this.previewDimensions.height + this.options.cropToolDimensions.height + 'px',\r\n      'margin-left': this.sanitizer.bypassSecurityTrustStyle(`calc((100% - ${this.previewDimensions.width + 10}px) / 2 + ${this.options.cropToolDimensions.width / 2}px)`),\r\n      'margin-right': this.sanitizer.bypassSecurityTrustStyle(`calc((100% - ${this.previewDimensions.width + 10}px) / 2 - ${this.options.cropToolDimensions.width / 2}px)`),\r\n    };\r\n    this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n  }\r\n\r\n  /**\r\n   * calculate dimensions of the preview canvas\r\n   */\r\n  private calculateDimensions(width: number, height: number): { width: number; height: number; ratio: number } {\r\n    const ratio = width / height;\r\n\r\n    // const maxWidth = this.screenDimensions.width > this.maxPreviewWidth ?\r\n    //   this.maxPreviewWidth : this.screenDimensions.width - 40;\r\n    // const maxHeight = this.screenDimensions.height > this.maxPreviewHeight ? this.maxPreviewHeight : this.screenDimensions.height - 240;\r\n    const maxWidth = this.maxPreviewWidth;\r\n    const maxHeight = this.maxPreviewHeight;\r\n    const calculated = {\r\n      width: maxWidth,\r\n      height: Math.round(maxWidth / ratio),\r\n      ratio: ratio\r\n    };\r\n\r\n    if (calculated.height > maxHeight) {\r\n      calculated.height = maxHeight;\r\n      calculated.width = Math.round(maxHeight * ratio);\r\n    }\r\n    return calculated;\r\n  }\r\n\r\n  /**\r\n   * returns a point by it's roles\r\n   * @param roles - an array of roles by which the point will be fetched\r\n   */\r\n  private getPoint(roles: RolesArray) {\r\n    return this.points.find(point => {\r\n      return this.limitsService.compareArray(point.roles, roles);\r\n    });\r\n  }\r\n\r\n  getStoyle(): { [p: string]: string | number } {\r\n    return this.editorStyle;\r\n  }\r\n}\r\n\r\n/**\r\n * a class for generating configuration objects for the editor\r\n */\r\nclass ImageEditorConfig implements DocScannerConfig {\r\n  /**\r\n   * max dimensions of oputput image. if set to zero\r\n   */\r\n  maxImageDimensions: ImageDimensions = {\r\n    width: 30000,\r\n    height: 30000\r\n  };\r\n  /**\r\n   * background color of the main editor div\r\n   */\r\n  editorBackgroundColor = '#fefefe';\r\n  /**\r\n   * css properties for the main editor div\r\n   */\r\n  editorDimensions: { width: string; height: string; } = {\r\n    width: '100vw',\r\n    height: '100vh'\r\n  };\r\n  /**\r\n   * css that will be added to the main div of the editor component\r\n   */\r\n  extraCss: { [key: string]: string | number } = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0\r\n  };\r\n\r\n  /**\r\n   * material design theme color name\r\n   */\r\n  buttonThemeColor: 'primary' | 'warn' | 'accent' = 'accent';\r\n  /**\r\n   * icon for the button that completes the editing and emits the edited image\r\n   */\r\n  exportImageIcon = 'cloud_upload';\r\n  /**\r\n   * color of the crop tool\r\n   */\r\n  cropToolColor = '#FF3333';\r\n  /**\r\n   * shape of the crop tool, can be either a rectangle or a circle\r\n   */\r\n  cropToolShape: PointShape = 'circle';\r\n  /**\r\n   * dimensions of the crop tool\r\n   */\r\n  cropToolDimensions: ImageDimensions = {\r\n    width: 10,\r\n    height: 10\r\n  };\r\n  /**\r\n   * aggregation of the properties regarding point attributes generated by the class constructor\r\n   */\r\n  pointOptions: PointOptions;\r\n  /**\r\n   * aggregation of the properties regarding the editor style generated by the class constructor\r\n   */\r\n  editorStyle?: { [key: string]: string | number };\r\n  /**\r\n   * crop tool outline width\r\n   */\r\n  cropToolLineWeight = 3;\r\n  /**\r\n   * maximum size of the preview pane\r\n   */\r\n  maxPreviewWidth = 800;\r\n\r\n  /**\r\n   * maximum size of the preview pane\r\n   */\r\n  maxPreviewHeight = 800;\r\n\r\n  constructor(options: DocScannerConfig) {\r\n    if (options) {\r\n      Object.keys(options).forEach(key => {\r\n        this[key] = options[key];\r\n      });\r\n    }\r\n\r\n    this.editorStyle = {'background-color': this.editorBackgroundColor};\r\n    Object.assign(this.editorStyle, this.editorDimensions);\r\n    Object.assign(this.editorStyle, this.extraCss);\r\n\r\n    this.pointOptions = {\r\n      shape: this.cropToolShape,\r\n      color: this.cropToolColor,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    Object.assign(this.pointOptions, this.cropToolDimensions);\r\n  }\r\n}\r\n\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {NgxDraggablePointComponent} from './components/draggable-point/ngx-draggable-point.component';\r\nimport {NgxFilterMenuComponent} from './components/filter-menu/ngx-filter-menu.component';\r\nimport {NgxShapeOutlineComponent} from './components/shape-outline/ngx-shape-outline.component';\r\nimport {NgxDocScannerComponent} from './components/image-editor/ngx-doc-scanner.component';\r\nimport {LimitsService} from './services/limits.service';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {AngularDraggableModule} from 'angular2-draggable';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OpenCVConfig} from './PublicModels';\r\nimport {NgxOpenCVModule} from 'ngx-opencv';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {NgxOpenCVService, OpenCvConfigToken} from 'ngx-opencv';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxDraggablePointComponent,\r\n    NgxFilterMenuComponent,\r\n    NgxShapeOutlineComponent,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  imports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    CommonModule,\r\n    NgxOpenCVModule,\r\n    MatSliderModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  entryComponents: [\r\n    NgxFilterMenuComponent,\r\n  ],\r\n  providers: [\r\n    NgxOpenCVService,\r\n    LimitsService,\r\n  ]\r\n})\r\nexport class NgxDocumentScannerModule {\r\n  static forRoot(config: OpenCVConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxDocumentScannerModule,\r\n      providers: [\r\n        { provide: OpenCvConfigToken, useValue: config },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/**\r\n * describes a state object for the OpenCV module\r\n */\r\nimport {PointShape} from './PrivateModels';\r\n\r\nexport interface OpenCVState {\r\n  ready: boolean;\r\n  loading: boolean;\r\n  error: boolean;\r\n  state: string;\r\n}\r\n\r\n/**\r\n * describes an object with width and height properties\r\n */\r\nexport interface ImageDimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n/**\r\n * threshold information for automatically detecting corners\r\n */\r\nexport interface ThresholdInformation {\r\n  thresholdType: 'standard' | 'adaptive_mean' | 'adaptive_gaussian';\r\n  /**\r\n   * Non-zero value assigned to the pixels for which the condition is satisfied\r\n   */\r\n  maxValue?: number;\r\n  /**\r\n   * Size of a pixel neighborhood that is used to calculate a threshold value for the pixel: 3, 5, 7, and so on.\r\n   * Only used with adaptive threshold variants\r\n   */\r\n  blockSize?: number;\r\n  /**\r\n   *  Constant subtracted from the mean or weighted mean (see the details below).\r\n   *  Normally, it is positive but may be zero or negative as well.\r\n   *  Only used with adaptive threshold variants\r\n   */\r\n  c?: number;\r\n  /**\r\n   * threshold value. Only used with standard threshold type.\r\n   */\r\n  thresh?: number;\r\n\r\n\r\n}\r\n\r\n/**\r\n * describes a configuration object for the editor\r\n */\r\nexport interface DocScannerConfig {\r\n  /**\r\n   * whether filter options are enabled\r\n   */\r\n  filterEnable?: boolean;\r\n  /**\r\n   * max dimensions of output image. if set to zero will not resize the image\r\n   */\r\n  maxImageDimensions?: ImageDimensions;\r\n  /**\r\n   * background color of the main editor div\r\n   */\r\n  editorBackgroundColor?: string;\r\n  /**\r\n   * css properties for the main editor div\r\n   */\r\n  editorDimensions?: { width: string; height: string; };\r\n  /**\r\n   * css that will be added to the main div of the editor component\r\n   */\r\n  extraCss?: { [key: string]: string | number };\r\n  /**\r\n   * material design theme color name\r\n   */\r\n  buttonThemeColor?: 'primary' | 'warn' | 'accent';\r\n  /**\r\n   * icon for the button that completes the editing and emits the edited image\r\n   */\r\n  exportImageIcon?: string;\r\n  /**\r\n   * color of the crop tool (points and connecting lines)\r\n   */\r\n  cropToolColor?: string;\r\n  /**\r\n   * shape of the crop tool points\r\n   */\r\n  cropToolShape?: PointShape;\r\n  /**\r\n   * width and height of the crop tool points\r\n   */\r\n  cropToolDimensions?: ImageDimensions;\r\n  /**\r\n   * weight of the crop tool's connecting lines\r\n   */\r\n  cropToolLineWeight?: number;\r\n  /**\r\n   * max width of the preview pane\r\n   */\r\n  maxPreviewWidth?: number;\r\n  /**\r\n   * max height of the preview pane\r\n   */\r\n  maxPreviewHeight?: number;\r\n  /**\r\n   * config threshold for auto\r\n   */\r\n  thresholdInfo?: ThresholdInformation;\r\n  /**\r\n   * whether rotated rectangle is used\r\n   */\r\n  useRotatedRectangle?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * describes a configuration object for the OpenCV service\r\n */\r\nexport interface OpenCVConfig {\r\n  /**\r\n   * path to the directory containing the OpenCV files, in the form of '/path/to/<opencv directory>'\r\n   * directory must contain the the following files:\r\n   * --<OpenCvDir>\r\n   * ----opencv.js\r\n   * ----opencv_js.wasm\r\n   */\r\n  openCVDirPath?: string;\r\n  /**\r\n   * additional callback that will run when OpenCv has finished loading and parsing\r\n   */\r\n  runOnOpenCVInit?: Function;\r\n}\r\n"]}