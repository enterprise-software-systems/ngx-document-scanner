{"version":3,"file":"ngx-document-scanner.js","sources":["ng:/ngx-document-scanner/lib/services/limits.service.ts","ng:/ngx-document-scanner/lib/components/draggable-point/ngx-draggable-point.component.ts","ng:/ngx-document-scanner/lib/components/filter-menu/ngx-filter-menu.component.ts","ng:/ngx-document-scanner/lib/components/shape-outline/ngx-shape-outline.component.ts","ng:/ngx-document-scanner/lib/components/image-editor/ngx-doc-scanner.component.ts","ng:/ngx-document-scanner/lib/ngx-document-scanner.module.ts","ng:/ngx-document-scanner/lib/PublicModels.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCE;AAIF,QA/BU,oBAAe,GAAe,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3E;AACM;AAEA;AAAY,QAAR,YAAO,GAAG;AACpB,YAAI,GAAG,EAAE,CAAC;AACV,YAAI,MAAM,EAAE,CAAC;AACb,YAAI,KAAK,EAAE,CAAC;AACZ,YAAI,IAAI,EAAE,CAAC;AACX,SAAG,CAAC;AACJ;AACM;AAEA;AAAY,QAAR,YAAO,GAA+B,EAAE,CAAC;AACnD;AACoB;AAEZ;AAA0B,QAKzB,cAAS,GAAgD,IAAI,eAAe,CAA6B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5I,QAAS,oBAAe,GAAgD,IAAI,eAAe,CAA6B,EAAE,CAAC,CAAC;AAC5H,QAAS,WAAM,GAAgC,IAAI,eAAe,CAAa,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7F,QAAS,mBAAc,GAAqC,IAAI,eAAe,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC;AACvG,KAEG;AACH;AAEC;AACE;AACE;AAAQ;AAAkC;AAC7B;AAAmB;AAAQ,IADpC,yCAAiB;AAAO;AACxB;AAA6B;AAC3B;AAAQ,IAFjB,UAAyB,UAA2B;AACtD,QADE,iBAMC;AACH,QANI,OAAO,IAAI,OAAO;AAAM;AAChB;AACZ;AAAuB;AAAY,QAFZ,UAAC,OAAO,EAAE,MAAM;AAAI,YACrC,KAAI,CAAC,eAAe,GAAG,UAAU,CAAC;AACxC,YAAM,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACF;AACF;AAAmB;AAC5B,IAHQ,wCAAgB;AAAO;AAEhC;AAA4B;AACjB;AAAQ,IAHjB,UAAwB,SAAS;AACnC,QADE,iBAMC;AACH,QANI,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7B,QAAI,SAAS,CAAC,OAAO;AAAM;AACL;AAEtB;AAAY,QAHU,UAAA,QAAQ;AAAI,YAC5B,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACpC,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzC,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AACS;AACK;AAE3B;AAAQ,IAJF,sCAAc;AAAO;AACS;AACK;AAE3B;AAAQ,IAJvB,UAAsB,kBAAuC;AAC/D,QADE,iBA0BC;AACH;AAGmB,QA5Bf,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC5C;AAEG;AACI;AACI,QAAP,IAAI,CAAC,eAAe,CAAC,OAAO;AAAM;AAChB;AAAuB;AAAY,QADxB,UAAA,SAAS;AAAI;AACnB,gBAAf,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM;AAAM;AAC5B;AACrB;AACO,YAHqC,UAAA,KAAK;AAAI,gBAClD,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/C,aAAO,EAAC;AACR,iBAAO,GAAG;AAAM;AACb;AAA2B;AAAgB,YADnC,UAAC,KAA0B;AAAI,gBAClC,OAAO,KAAK,CAAC,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACvD,aAAO,EAAC;AACR;AACY,gBADF,KAAK;AACf,YAAM,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;AACvD,gBAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,cAAc,EAAC,CAAC;AAC5C,aAAO;AACP,YAAM,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,QAAQ,EAAE;AAC3D,gBAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,cAAc,EAAC,CAAC;AAC5C,aAAO;AACP,YAAM,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AACtC,SAAK,EAAC,CAAC;AACP,QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,QAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAClD,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AAAyC;AACD;AAAmB;AAAQ,IAD1E,sCAAc;AAAO;AACtB;AAA8D;AAAmB;AAAQ,IAD/F,UAAsB,cAAmC;AAC3D,QADE,iBAUC;AACH;AAIyB;AAEX,YAfJ,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;AAAM;AACxB;AAAuB;AAAY,QADhB,UAAA,KAAK;AAAI,YAC5C,OAAO,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAClE,SAAK,EAAC;AACN,QAAI,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACxC,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;AACpD,SAAK;AACL,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AAClB;AAA8D;AAChC;AAAQ,IAF7B,oCAAY;AAAO;AAClB;AACL;AAAmC;AAAQ,IAF9C,UAAoB,cAAmC;AAAI,QAA3D,iBAsCC;AACH;AAEkB,YAxCR,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;AAAM;AACnC;AAAuB;AAC5C,QAFmD,UAAA,SAAS;AAAI,YAC3D,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACvD,SAAK,EAAC;AACN;AACwB,YAAd,cAAc,GAAmB;AAC3C,YAAM,OAAO,EAAE,KAAK;AACpB,YAAM,iBAAiB,EAAE;AACzB,gBAAQ,CAAC,EAAE,CAAC;AACZ,gBAAQ,CAAC,EAAE,CAAC;AACZ,aAAO;AACP,YAAM,gBAAgB,EAAE;AACxB,gBAAQ,CAAC,EAAE,cAAc,CAAC,CAAC;AAC3B,gBAAQ,CAAC,EAAE,cAAc,CAAC,CAAC;AAC3B,aAAO;AACP,SAAK;AACL;AAEG,QAAC,WAAW,CAAC,OAAO;AAAM;AACP;AAAuB;AAAY,QADjC,UAAA,SAAS;AAAI;AACV,gBAAf,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;AAC5D,YAAM,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;AACvD,gBAAQ,IAAI,cAAc,CAAC,aAAa,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACrE,oBAAU,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D,oBAAU,cAAc,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACnF,iBAAS;AACT,aAAO;AAAC,iBAAK,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,QAAQ,EAAE;AAClE,gBAAQ,IAAI,cAAc,CAAC,aAAa,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACrE,oBAAU,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,oBAAU,cAAc,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACnF,iBAAS;AACT,aAAO;AACP,SAAK,EAAC,CAAC;AACP,QACI,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,EAAE;AAC9F,YAAM,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;AACpC,SAAK;AACL,QACI,OAAO,cAAc,CAAC;AAC1B,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AAAyC;AAC9B;AACQ;AAEtB;AAAmB;AAAQ,IAJnC,uCAAe;AAAO;AAAyC;AAC9B;AACQ;AAEtB;AAAmB;AAC7C,IALA,UAAuB,YAAY,EAAE,wBAAwB,EAAE,gBAA4C;AAC7G,QADE,iBAWC;AACH;AAG8B,QAb1B,gBAAgB,GAAG,gBAAgB,CAAC,GAAG;AAAM;AAC3B;AACf;AAAY,QAFyB,UAAA,KAAK;AAAI,YAC/C,OAAO,IAAI,kBAAkB,CAAC;AACpC,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,KAAK;AACnD,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,MAAM;AACpD,aAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG;AAAM;AAC9B;AAAuB;AAE7C,QAH+C,UAAA,KAAK;AAAI,YAClD,OAAO,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAC/C,SAAK,EAAC,CAAC,CAAC;AACR,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AAA8C;AAClC;AACQ;AAEtB;AAAmB;AAAQ,IAJpC,2CAAmB;AAAO;AAA8C;AAClC;AAE/C;AACiC;AAAmB;AAC7C,IALL,UAA2B,YAAY,EAAE,wBAAwB,EAAE,gBAA4C;AACjH,QADE,iBAWC;AACH;AAGE,QAbE,gBAAgB,GAAG,gBAAgB,CAAC,GAAG;AAAM;AAC3B;AACf;AAAY,QAFyB,UAAA,KAAK;AAAI,YAC/C,OAAO,IAAI,kBAAkB,CAAC;AACpC,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,KAAK;AACnD,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,MAAM;AACpD,aAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG;AAAM;AAC9B;AAAuB;AACxC,QAF0C,UAAA,KAAK;AAAI,YAClD,OAAO,KAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;AACnD,SAAK,EAAC,CAAC,CAAC;AACR,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACV;AAAgB;AAClB;AAAmB;AAAQ,IAFnB,6CAAqB;AAAO;AACV;AAC3B;AAAyB;AAAmB;AAAQ,IAFnD,UAA8B,MAA2B;AAAI,QAA7D,iBAkBC;AACH;AAEkB,YApBR,OAAO,GAAwB;AACzC,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AACpD,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;AAC/C,YAAM,KAAK,EAAE,EAAE;AACf,SAAK;AACL;AACI;AAAyB,YAAnB,KAAK,GAAsB;AACrC,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,YAAM,CAAC,KAAK,EAAE,MAAM,CAAC;AACrB,YAAM,CAAC,KAAK,EAAE,OAAO,CAAC;AACtB,YAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;AACzB,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,SAAK;AACL,QAAI,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS;AAAM;AACzB;AAAuB;AACzC,QAFsC,UAAA,KAAK;AAAI,YAC7C,OAAO,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACpD,SAAK,EAAC,GAAG,CAAC,CAAC,CAAC;AACZ,QAAI,OAAO,OAAO,CAAC;AACnB,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACT;AAAgB;AAClB;AAAmB;AAAQ,IAFpB,iDAAyB;AAAO;AACT;AAC3B;AAAyB;AAC7B;AAAQ,IAHR,UAAkC,MAA2B;AAAI,QAAjE,iBAkBC;AACH;AAEkB,YApBR,OAAO,GAAwB;AACzC,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;AAC9C,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AACrD,YAAM,KAAK,EAAE,EAAE;AACf,SAAK;AACL;AACI;AAAyB,YAAnB,KAAK,GAAsB;AACrC,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,YAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;AACzB,YAAM,CAAC,KAAK,EAAE,OAAO,CAAC;AACtB,YAAM,CAAC,KAAK,EAAE,MAAM,CAAC;AACrB,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,SAAK;AACL,QAAI,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS;AAAM;AACzB;AAAuB;AACzC,QAFsC,UAAA,KAAK;AAAI,YAC7C,OAAO,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACpD,SAAK,EAAC,GAAG,CAAC,CAAC,CAAC;AACZ,QAAI,OAAO,OAAO,CAAC;AACnB,KAAG;AAEH;AACE;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AAAmD;AAC5C;AACJ;AACZ;AAAQ,IAHV,oCAAY;AAAO;AAC5B;AAAmC;AACJ;AACZ;AAAQ,IAHzB,UAAoB,MAAqB,EAAE,MAAqB;AAAI,QAClE,OAAO,MAAM,CAAC,KAAK;AAAM;AACT;AAChB;AAAY,QAFQ,UAAC,OAAO;AAAI,YAC9B,OAAO,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtC,SAAK,EAAC,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;AAC1C,KAAG;AAEH;AAAQ;AAAgB;AACZ;AAEX;AAAQ,IAHC,wCAAgB;AAAO;AACxB;AAEF;AACC;AACR,IALE,UAAyB,SAAS;AACpC,QAAI,OAAO;AACX,YAAM,IAAI,EAAE,GAAG;AACf,YAAM,KAAK,EAAE,GAAG;AAChB,YAAM,GAAG,EAAE,GAAG;AACd,YAAM,MAAM,EAAE,GAAG;AACjB,SAAK,CAAC,SAAS,CAAC,CAAC;AACjB,KAAG,CA3PM;AAAC;0BAHT,UAAU,SAAC,7CAMV;IALA,UAAU,EAAE,MAAM,kBACnB,xCAIgE;;;;;;;gDAWxB;AAAC,wBAtB1C;AAAE,CAKF,IA+PC;AACD;AAEW;AAAQ;AAAiB;AAEpC;AAAQ,IA9PN,wCAAyE;AAC3E;AACE;AACE;AACW;AACN;AACJ,IAFH,gCAKE;AACJ;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,gCAAiD;AACnD;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,wCAAyC;AAC3C;AAEA,IAEE,kCAA0I;AAC5I;AAAqB,IAAnB,wCAA0H;AAC5H;AAAqB,IAAnB,+BAA2F;AAC7F;AAAqB,IAAnB,uCAAqG;AACvG;AACC;AAAI;AAAW;AACd,kCAoOD;AACD;AACY;AACT,IAND,gCAAU;AACZ;AACQ,IADN,gCAAU;AACZ;AACA,IADE,oCAAkB;AACpB;AACA;AACG;AAAW;AAAI,yBAKjB;AACD;AACY;AAAqB,IAN/B,yBAAY;AACd;AACG,IADD,4BAAe;AACjB;AACI,IADF,2BAAc;AAChB;AAGE,IAHA,0BAAa;AACf;AAIA;AAAsD,IAKpD,4BAAY,QAAoB,EAAE,KAAiB;AACrD,QAAI,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB,QAAI,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB,QAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,KAAG;AACH,IAAA,yBAAC;AAAD,CAAC,IAAA;AACD;AACY;AAAqB,IAX/B,+BAAU;AACZ;AACQ,IADN,+BAAU;AACZ;AACA,IADE,mCAAkB;AACpB;AACC;AAAC;AAAI;AAAkC;AAGxB;AAK0C;AAAI;AAA8D,ICzQ1H,oCAAoB,aAA4B;AAAI,QAAhC,kBAAa,GAAb,aAAa,CAAe;AAAC,QAhBxC,UAAK,GAAG,EAAE,CAAC;AACtB,QAAW,WAAM,GAAG,EAAE,CAAC;AACvB,QAAW,UAAK,GAAG,SAAS,CAAC;AAC7B,QAAW,UAAK,GAAsB,MAAM,CAAC;AAC7C,QAAW,iBAAY,GAAsB,MAAM,CAAC;AACpD,QAIE,aAAQ,GAAe;AACzB,YAAI,CAAC,EAAE,CAAC;AACR,YAAI,CAAC,EAAE,CAAC;AACR,SAAG,CAAC;AACJ,KAGsD;AACtD;AACO;AACH;AAAQ,IADV,oDAAe;AACf;AAAmB;AAAQ,IAD3B;AAAc,QAAd,iBAqBC;AACH,QArBI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO;AAAM;AAC1B;AACnB;AACI,QAHoC,UAAA,GAAG;AAAI,YAC5C,KAAI,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACzC,SAAK,EAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS;AAAM;AAC/B;AAAuB;AAAY,QADT,UAAA,UAAU;AAAI,YACxD,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE;AACxD,gBAAQ,KAAI,CAAC,eAAe,GAAG;AAC/B,oBAAU,KAAK,EAAE,UAAU,CAAC,KAAK;AACjC,oBAAU,MAAM,EAAE,UAAU,CAAC,MAAM;AACnC,iBAAS,CAAC;AACV,gBAAQ,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AAC5D,gBAAQ,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,kBAAkB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAClG,aAAO;AACP,SAAK,EAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS;AAAM;AAChC;AACX;AAAY,QAF0B,UAAA,SAAS;AAAI,YACxD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,gBAAQ,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC3C,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AAGd;AAAmB;AAAQ,IAHzB,+CAAU;AACV;AAEG;AAAmB;AAAQ,IAH9B;AAAc,QACZ,OAAO;AACX,YAAM,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI;AAC9B,YAAM,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI;AAChC,YAAM,kBAAkB,EAAE,IAAI,CAAC,KAAK;AACpC,YAAM,eAAe,EAAE,IAAI,CAAC,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAG,CAAC;AAC3D,YAAM,QAAQ,EAAE,UAAU;AAC1B,SAAK,CAAC;AACN,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AACmD;AACnB;AAAmB;AAAQ,IAFzE,mDAAc;AAAO;AACmD;AACnB;AAAmB;AACxE,IAHA,UAAe,QAAoB;AACrC;AAAyB,YAAf,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;AAChF;AAAyB,YAAf,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC;AAC9E,QAAI,IAAI,cAAc,CAAC,OAAO,EAAE;AAChC;AACM,YAAA,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,gBAAgB,CAAC;AAC3D,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC5D,YAAM,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACvC,SAAK;AACL,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACM;AACV;AAGG;AAAmB;AAAQ,IAL9B,mDAAc;AAAO;AAEpB;AAEP;AAC0B;AAAmB;AAC9C,IAND,UAAuB,cAA8B;AACvD;AAAyB,YAAf,WAAW,GAAG;AACxB,YAAM,CAAC,EAAE,CAAC;AACV,YAAM,CAAC,EAAE,CAAC;AACV,SAAK;AACL,QAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO;AAAM;AAC3B;AAAuB;AAAY,QADb,UAAA,IAAI;AAAI,YAC9C,WAAW,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACzG,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAChC,QAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9F,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACgD;AACrD;AAAmB;AAAQ,IAFlC,gDAAW;AAAO;AACgD;AACrD;AAAmB;AAAQ,IAFxC,UAAY,QAAoB;AAClC;AAAyB,YAAjB,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;AAC9E;AAAyB,YAAf,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC;AAC9E,QAAI,IAAI,cAAc,CAAC,OAAO,EAAE;AAChC,YAAM,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,gBAAgB,CAAC;AAC3D,YAAM,IAAI,cAAc,CAAC,OAAO,EAAE;AAClC,gBAAQ,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AAC5C,gBAAQ,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACpF,gBAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC9D,aAAO;AACP,SAAK;AACL,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AAEN;AAAgB;AACC;AAAmB;AAAQ,IAH5C,uDAAkB;AAAO;AAEN;AAAgB;AACC;AAAmB;AAAQ,IAHvE,UAA2B,UAA2B;AACxD,QAAI,OAAO;AACX,YAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;AACjF,YAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;AAClF,SAAK,CAAC;AACN,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AACN;AAAgB;AAC6B;AAAmB;AACtE,IAHM,uDAAkB;AAAO;AACN;AACpB;AAAiE;AAC3D;AAAQ,IAHrB,UAA2B,SAAqC;AAClE,QADE,iBAUC;AACH,QAVI,SAAS,CAAC,OAAO;AAAM;AACL;AAAuB;AAAY,QADnC,UAAA,QAAQ;AAAI,YAC5B,IAAI,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC5E,gBAAQ,QAAQ,GAAG,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AACpD,gBAAQ,KAAI,CAAC,QAAQ,GAAG;AACxB,oBAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvB,oBAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvB,iBAAS,CAAC;AACV,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACN;AAAgB;AAA2B;AAAmB;AAAQ,IADpE,sDAAiB;AAAO;AACN;AAAgB;AAA2B;AAC9D;AAAQ,IAFf,UAA0B,QAA6B;AAAI,QACzD,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/E,YAAM,OAAO,QAAQ,CAAC;AACtB,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;AAAE,gBAAA,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAAC,aAAC;AAC/F,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;AAAE,gBAAA,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAC,aAAC;AAC7C,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;AAAE,gBAAA,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AAAC,aAAC;AACjG,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;AAAE,gBAAA,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAC,aAAC;AAC7C,SAAK;AACL,QAAI,OAAO,QAAQ,CAAC;AACpB,KAAG,CA9IK;AAAC;uCAJR,SAAS,SAAC,zDAIqB;QAH9B,QAAQ,EAAE,lBAKC,gBAVL,aAAa;OAKY,PALT;mBAMtB,nBANgC;AAAkD,wBASjF,KAAK;AAAK,yBACV,KAAK;AAAK,wBACV,KAAK;AAAK,wBACV,KAAK;AAAK,+BACV,KAAK;AAAK,6BACV,KAAK;AAAK,gCACV,KAAK;2BAT6C,3BASxC,4BACV,KAAK;OATP,PASY,mCACV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IAsInB,iCAAC;AAED,CArJA,IAmJC;AACD;AACY;AAAqB,IAhJ/B,2CAAoB;AACtB;AAAqB,IAAnB,4CAAqB;AACvB;AAAqB,IAAnB,2CAA2B;AAC7B;AAAqB,IAAnB,2CAA2C;AAC7C;AAAqB,IAAnB,kDAAkD;AACpD;AAAqB,IAAnB,gDAA0D;AAC5D;AAAqB,IAAnB,mDAAmC;AACrC;AAAqB,IAAnB,+CAAgC;AAClC;AAAQ;AAAiB;AAAgB;AACzC,IADE,sDAA8C;AAChD;AAAqB,IAAnB,8CAGE;AACJ;AAAQ;AAAiB;AAAgB;AACpC,IADH,qDAAyC;AAC3C;AAAqB,IAAnB,mDAA0B;AAC5B;AACO;AAAiB;AAAgB;AAAQ,IAAlC,mDAAoC;AAAC;AAAE;AAAC;AAEpD;AACY;AACuB;AAIxB;AAAI;AACA,ICsBf,gCAAoB,cAAyD,EAC3B,IAAS;AAC1D,QAFD,iBAEgB;AAClB,QAHsB,mBAAc,GAAd,cAAc,CAA2C;AAAC,QAC5B,SAAI,GAAJ,IAAI,CAAK;AAC7D,QAlDE,kBAAa,GAA8B;AAC7C,YAAI;AACJ,gBAAM,IAAI,EAAE,SAAS;AACrB,gBAAM,IAAI,EAAE,gBAAgB;AAC5B,gBAAM,MAAM;AAAO;AACS;AAEpB;AAEL,gBALW,UAAC,MAAM;AAAI,oBACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,KAAK;AACjB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,gBAAgB;AAC5B,gBAAM,MAAM;AAAO;AACS;AAEpB;AAEP,gBALa,UAAC,MAAM;AAAI,oBACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,SAAS;AACrB,gBAAM,MAAM;AAAO;AACS;AAEpB;AAEP,gBALa,UAAC,MAAM;AAAI,oBACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,aAAa;AACzB,gBAAM,IAAI,EAAE,gBAAgB;AAC5B,gBAAM,MAAM;AAAO;AACS;AAEpB;AACN,gBAJY,UAAC,MAAM;AAAI,oBACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,aAAa;AACzB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,UAAU;AACtB,gBAAM,IAAI,EAAE,eAAe;AAC3B,gBAAM,MAAM;AAAO;AACS;AAEpB;AACH,gBAJS,UAAC,MAAM;AAAI,oBACjB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,UAAU;AACtB,aAAK;AACL,SAAG,CAAC;AACJ,QAAY,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;AACtE,KAOkB;AAClB;AAEK;AAA6B;AAAmB;AAAQ,IAV3D,6CAAY;AAAO;AACA;AAChB;AAAQ,IAFX,UAAa,UAAU;AACzB,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AAClC,QAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;AAClC,KAAG,CA/CK;AAAC;mCAJR,SAAS,SAAC,rDAIqB;QAH9B,QAAQ,EAAE,iBAAiB,nCAMrB,gBATuB,iBAAiB;oBAI9C,pBAJkD,gDAwDrC,MAAM,SAAC,qBAAqB;AAAQ;AAAU;AAItC,iCAXpB,MAAM;AAAI;;mBA7CoC,kBAChD;;;;;;;;;;;;;;;;;;;oBA4CkB;AAAC,IAUpB,6BAAC;AACA,CA1DD,IAyDC;AACD;AAAa;AAAqB,IArDhC,+CAyCE;AACJ;AAAqB,IAAnB,gDAAoE;AACtE;AAAQ;AAAiB;AACb;AAAQ,IAIN,gDAAiE;AAAC;AAC5D,IAAN,sCAA+C;AAC7D;AAAE;AAAC;AAAI;AAGY;AAA+E;AAAsI;AAAI;AAA4D,IC7CtS,kCAAoB,aAA4B;AAAI,QAAhC,kBAAa,GAAb,aAAa,CAAe;AAAC,QAPxC,UAAK,GAAG,SAAS,CAAC;AAC7B,KAMsD;AACtD;AACO;AACH;AAAQ,IADV,kDAAe;AACf;AAAmB;AAAQ,IAD3B;AAAc,QAAd,iBA4BC;AACH;AAIA,QA/BI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AAC5D,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC9D,QAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS;AAAM;AAC1B;AACb;AAAY,QAFsB,UAAA,SAAS;AAAI,YAClD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,gBAAQ,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AACjC,gBAAQ,KAAI,CAAC,UAAU,EAAE,CAAC;AAC1B,gBAAQ,KAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,gBAAQ,KAAI,CAAC,SAAS,EAAE,CAAC;AACzB,aAAO;AACP,SAAK,EAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS;AAAM;AAC/B;AACH;AAAY,QAFiB,UAAA,UAAU;AAAI,YACxD,KAAI,CAAC,WAAW,EAAE,CAAC;AACzB,YAAM,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AACzD,YAAM,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC3D,SAAK,EAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS;AAAM;AACjC;AACb;AAAY,QAF8B,UAAA,SAAS;AAAI,YACzD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,gBAAQ,UAAU;AAAM;AACG;AACV,gBAFG;AACd,oBAAI,KAAI,CAAC,WAAW,EAAE,CAAC;AAC7B,oBAAU,KAAI,CAAC,UAAU,EAAE,CAAC;AAC5B,oBAAU,KAAI,CAAC,SAAS,EAAE,CAAC;AAC3B,iBAAS,GAAE,EAAE,CAAC,CAAC;AACf,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACK;AAAgB;AAC3B;AAAQ,IAFN,8CAAW;AACnB;AAA+B;AAC9B;AAAmB;AAAQ,IAF5B;AAAc;AACD,YAAL,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AAC5C;AAAyB,YAAf,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;AACvC,QAAI,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACvE,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AAEC;AAEd;AAAmB;AAChB,IALM,6CAAU;AAClB;AAC0B;AAEd;AACL;AAAQ,IALf;AAAc,QAAd,iBAiBC;AACH;AAEkB,YAnBR,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC5C;AAAyB,YAAf,YAAY,GAAG,EAAE;AAC3B;AAEA,YADU,SAAS,GAAG;AACtB,YAAM,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAClD,YAAM,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AACpD,SAAK;AACL,gCACa,CAAC;AAAI;AACL,gBAAD,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,YAAM,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;AAAM;AACpB;AAA2B;AAAgB,YAD5B,UAAC,KAAK;AAAI,gBACzC,OAAO,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACnE,aAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;AAEI,QAPA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC9B,oBADa,CAAC;AAAG,SAMZ;AACL,QAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AACtC,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AAEN;AAAgB;AACtB;AAAQ,IAHA,4CAAS;AACjB;AACkB;AAAgB;AACtB;AAAQ,IAHpB;AAAc,QAAd,iBAkBC;AACH;AAGqB,YArBX,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa;AAC5C;AAAyB,YAAf,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;AACvC,QAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,QAAI,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAI,GAAG,CAAC,SAAS,EAAE,CAAC;AACpB,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO;AAAM;AACvB;AACG;AACf;AACI,QAJ0B,UAAC,KAAK,EAAE,KAAK;AAAI,YAC1C,IAAI,KAAK,KAAK,CAAC,EAAE;AACvB,gBAAQ,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACrC,aAAO;AACP,YAAM,IAAI,KAAK,KAAK,KAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD;AAAiC,oBAAnB,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;AACvD,gBAAQ,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7C,aAAO;AAAC,iBAAK;AACb,gBAAQ,GAAG,CAAC,SAAS,EAAE,CAAC;AACxB,aAAO;AACP,SAAK,EAAC,CAAC;AACP,QAAI,GAAG,CAAC,MAAM,EAAE,CAAC;AACjB,KAAG,CA7FK;AAAC;qCAJR,SAAS,SAAC,vDAIqB;QAH9B,QAAQ,EAAE,lBAMP,gBAVG,aAAa;IAIS,JAJN;gBAKtB,hBALgC;AAClC,wBAQG,KAAK;AAAK,yBACV,KAAK;AAAK,6BACV,KAAK;AAAK,yBACV,SAAS,SAAC,SAAS;AAAM;oBAPuB,kBAClD;;;;;;;;;;;;;;;;;;;;;;;;;;oBAQA;AAAC,IAuFF,+BAAC;AAED,CApGA,IAkGC;AACD;AAEW;AAAqB,IA/F9B,yCAA2B;AAC7B;AAAqB,IAAnB,0CAAwB;AAC1B;AAAqB,IAAnB,8CAAqC;AACvC;AAAqB,IAAnB,0CAA6B;AAC/B;AACO;AAAiB;AAAgB;AACvC,IADC,2CAA4C;AAC9C;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,iDAAkD;AACpD;AAAQ;AAAiB;AAAgB;AAAQ,IAAnC,iDAAoC;AAAC;AAAE;AAAC;AAEpD;AACY;AACsC;AAGhD;AAAI;AACsB,IC6I5B,gCAAoB,SAA2B,EAAU,aAA4B,EAAU,WAA2B;AAC5H,QADE,iBAuBC;AACH,QAxBsB,cAAS,GAAT,SAAS,CAAkB;AAAC,QAAS,kBAAa,GAAb,aAAa,CAAe;AAAC,QAAS,gBAAW,GAAX,WAAW,CAAgB;AAAC,QArJ3H,UAAK,GAAG,CAAC,CAAC;AACZ;AAEK;AAGK;AACV,QAuCE,gBAAW,GAAG,KAAK,CAAC;AACtB;AACM;AAEA;AAAY,QAAhB,SAAI,GAAqB,MAAM,CAAC;AAClC;AACM;AAEA;AAAY,QAAR,mBAAc,GAAG,SAAS,CAAC;AACrC;AACW;AACA;AAAY,QASb,oBAAe,GAAoB;AAC7C,YAAI,KAAK,EAAE,CAAC;AACZ,YAAI,MAAM,EAAE,CAAC;AACb,SAAG,CAAC;AACJ;AACuB;AAEb;AACT;AACM;AAEQ;AAAY,QAwBf,eAAU,GAAyB,IAAI,YAAY,EAAU,CAAC;AAC1E;AACM;AAEA;AAAY,QAAN,eAAU,GAAuB,IAAI,YAAY,EAAQ,CAAC;AACtE;AACM;AAEA;AAAY,QAAN,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;AAC/D;AACM;AAEA;AAAY,QAAN,UAAK,GAA0B,IAAI,YAAY,EAAW,CAAC;AACvE;AACM;AAEA;AAAY,QAAN,eAAU,GAA0B,IAAI,YAAY,EAAW,CAAC;AAC5E,QAgCI,IAAI,CAAC,gBAAgB,GAAG;AAC5B,YAAM,KAAK,EAAE,MAAM,CAAC,UAAU;AAC9B,YAAM,MAAM,EAAE,MAAM,CAAC,WAAW;AAChC,SAAK,CAAC;AACN;AAEG,QAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS;AAAM;AACnC;AAAuB;AACxB,QAF+B,UAAC,OAAoB;AAAI,YACxD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;AACnC,YAAM,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACrC,YAAM,IAAI,OAAO,CAAC,KAAK,EAAE;AACzB,gBAAQ,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACvD,aAAO;AAAC,iBAAK,IAAI,OAAO,CAAC,OAAO,EAAE;AAClC,gBAAQ,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO;AAAC,iBAAK,IAAI,OAAO,CAAC,KAAK,EAAE;AAChC,gBAAQ,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,aAAO;AACP,SAAK,EAAC,CAAC;AACP;AAEG,QAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS;AAAM;AAC1B;AAIlB;AACH,QAN0C,UAAA,MAAM;AAAI,YAC/C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,SAAK,EAAC,CAAC;AACP,KAAG;AACH,IA5JE,sBAAI,oDAAgB;AAAI;AACf;AACmB;AAC5B;AAIF;AAE2B;AAElB;AAAY,QAXnB;AAAc,YAAd,iBAIC;AACH,YAJI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM;AAAM;AAChB;AAI1B;AACU,YAN2B,UAAA,MAAM;AAAI,gBACzC,OAAO,MAAM,CAAC,IAAI,KAAK,KAAI,CAAC,IAAI,CAAC;AACvC,aAAK,EAAC,CAAC;AACP,SAAG;AAEH;AACoB;AAEd,OALH;AACH,IAwGE,sBAAa,wCAAI;AAAI;AACb;AACK;AACJ;AAAY;AAEhB;AACc;AACrB;AAAc;AAAqB;AACnB;AAAqB;AAC9B;AACE;AACO;AAChB;AAAY,QAZV,UAAkB,IAAU;AAC9B,YADE,iBAgBC;AACH,YAhBI,IAAI,IAAI,EAAE;AACd,gBAAM,UAAU;AAAM;AACM;AAChB,gBAFK;AACX,oBAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,iBAAO,GAAE,CAAC,CAAC,CAAC;AACZ,gBAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC/B,gBAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAChC,gBAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS;AAClC;AACJ;AACA;AAAoB,gBAFZ,UAAO,OAAoB;AAEf;AACkB;AAEpC;AAKC,qCATW,OAAO,CAAC,KAAK,EAAb,wBAAa;AAAC;AAEX,gCAAL,qBAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAA;AAAC;AACH;AAOnB,gCARJ,SAAyB,CAAC;AACtC,gCAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC;AAMK;AAEoB;AAEZ;AAAwB,qBAT5B,EAAC,CAAC;AACX,aAAK;AACL,SAAG;AAEH;AACoB;AAEZ,OALL;AACH;AAEC;AAAmB;AAAQ,IA6B1B,yCAAQ;AACR;AAAmB;AACnB,IAFA;AACD,QADC,iBA8DC;AACH,QA9DI,IAAI,CAAC,aAAa,GAAG;AACzB,YAAM;AACN,gBAAQ,IAAI,EAAE,MAAM;AACpB,gBAAQ,MAAM;AAAO;AACO;AACxB,gBAFY;AACV,oBAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,iBAAS,CAAA;AACT,gBAAQ,IAAI,EAAE,YAAY;AAC1B,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,MAAM;AACpB,aAAO;AACP,YAAM;AACN,gBAAQ,IAAI,EAAE,QAAQ;AACtB,gBAAQ,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,gBAAQ,IAAI,EAAE,cAAc;AAC5B,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,MAAM;AACpB,aAAO;AACP,YAAM;AACN,gBAAQ,IAAI,EAAE,WAAW;AACzB,gBAAQ,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE;AAC/B,gBAAQ,IAAI,EAAE,MAAM;AACpB,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,MAAM;AACpB,aAAO;AACP,YAAM;AACN,gBAAQ,IAAI,EAAE,MAAM;AACpB,gBAAQ,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE;AAC3B,gBAAQ,IAAI,EAAE,YAAY;AAC1B,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,OAAO;AACrB,aAAO;AACP,YAAM;AACN,gBAAQ,IAAI,EAAE,QAAQ;AACtB,gBAAQ,MAAM;AAAO;AACO;AACtB,gBAFU;AACV,oBAAI,IAAI,KAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACxC,wBAAY,OAAO,KAAI,CAAC,aAAa,EAAE,CAAC;AACxC,qBAAW;AACX,iBAAS,CAAA;AACT,gBAAQ,IAAI,EAAE,cAAc;AAC5B,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,OAAO,GAAG,UAAU;AAC7D,aAAO;AACP,YAAM;AACN,gBAAQ,IAAI,EAAE,QAAQ;AACtB,gBAAQ,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,gBAAQ,IAAI,EAAE,cAAc;AAC5B,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,IAAI,EAAE,OAAO;AACrB,aAAO;AACP,SAAK,CAAC;AACN;AAEG,QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtD;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO;AAAM;AACd;AACf;AAAY,QAFY,UAAA,MAAM;AAAI,YACnC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACpC,gBAAQ,MAAM,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AACnD,aAAO;AACP,SAAK,EAAC,CAAC;AACP,QAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AACxD,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;AAChD,KAAG;AAEH;AAAQ;AAA0B;AACrB;AAAQ,IADnB,4CAAW;AAAO;AACd;AAAmB;AAClB,IAFL,UAAY,OAAsB;AACpC,QAAI,IAAI,OAAO,CAAC,MAAM,EAAE;AACxB,YAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,EAAE;AAClH,gBAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1C,aAAO;AACP,SAAK;AACL,KAAG;AAEH;AACE;AACE;AAEC;AACE;AAEJ;AACH;AACE;AAGa;AAIR;AAAQ;AACS;AACT;AAAQ,IAXrB,qCAAI;AAAI;AAET;AAGa;AAIR;AAAQ;AACS;AACT;AAAQ,IAXpB;AACG,QAAD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,KAAG;AAEH;AAAQ;AACH;AAAQ,IADX,wCAAO;AAAO;AACH;AAAQ,IADnB;AAAc,QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;AACrB,KAAG;AAEH;AAAQ;AACF;AAAQ,IADN,yCAAQ;AACd;AAAmB;AACjB,IAFF;AAAc;AAGb;AACiB;AAIX;AAEP,wBATE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACxB,wBAAI,qBAAM,IAAI,CAAC,SAAS,EAAE,EAAA;AAAC;AACA,wBADvB,SAAsB,CAAC;AAC3B,6BAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAxB,wBAAwB;AAAC,wBAC3B,qBAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAA;AAAC;AAK9B,wBALC,SAA4B,CAAC;AACnC;AAIgB;AAGhB;AAEW;AAAgB;AAAY,KARpC;AAEH;AAAQ;AACQ;AAChB,IAFE,qCAAI;AACJ;AAAmB;AAChB,IAFH;AACG,QAAD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACvB,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtC,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AAEQ;AAAgB;AACxB;AAAQ,IAHN,4CAAW;AACzB;AACwC;AAC3B;AAAmB;AAC5B,IAJJ;AAAc;AAEN;AAA8B;AAE1B;AACM,4BAJhB,qBAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAA;AAAC;AACP,wBADvB,SAA6B,CAAC;AAClC,wBAAI,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;AACzC,4BAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AACnC,iCAAO,IAAI;AAAM;AAEf;AACK;AACP,4BAJY,UAAA,YAAY;AAAI,gCACpB,YAAY,CAAC,MAAM;AAAM;AAE3B;AACQ;AAEX,gCALyB,UAAC,IAAI;AAAI,oCAC3B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,oCAAU,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,iCAAS,GAAE,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACpC,6BAAO,EAAC,CAAC;AACT,yBAAK;AAAC,6BAAK;AACX,4BAAM,IAAI,CAAC,WAAW,CAAC,MAAM;AAAM;AAE/B;AACM;AAET,4BAL6B,UAAC,IAAI;AAAI,gCAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,gCAAQ,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,6BAAO,GAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAClC,yBAAK;AACL;AAGoC;AAAkB;AAAgB;AAAY,KAH/E;AAEH;AACE;AACE;AACE;AAAQ;AAEwB;AAAgB;AAAmB;AACnE,IAHI,8CAAa;AACrB;AACoD;AAAgB;AACxD;AACT,IAJH;AAAc,QAAd,iBAUC;AACH;AACwB,YAXd,IAAI,GAAG,EAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAC;AAC9C;AAAyB,YAAf,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE;AACzE,YAAM,IAAI,EAAE,IAAI;AAChB,SAAK,CAAC;AACN,QAAI,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS;AAAM;AAC/B;AAAY,QADc;AACxC,YAAA,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;AACxC,YAAM,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAK,EAAC,CAAC;AACP,KACG;AAEH;AACE;AACE;AAEJ;AAAQ;AAEJ;AAAQ;AACK;AACd;AACI;AACJ;AACD;AAAgB;AACC;AACT;AAAQ,IAPR,yCAAQ;AAAI;AACK;AACd;AAER;AAAQ;AACD;AACN;AACL;AAAmB;AAAQ,IAP1B,UAAiB,IAAU;AAC7B,QADE,iBAyBC;AACH,QAzBI,OAAO,IAAI,OAAO;AAAM;AACtB;AACL;AACW;AAAY,QAHD,UAAO,OAAO,EAAE,MAAM;AAGxC;AAA8B;AAE5B;AACyB;AAGzB;AACN,wBATK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC;AAC0B;AACR;AAEC,wBAHX,qBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAA;AAAC;AAE9B,wBAFG,SAA0B,CAAC;AACnC;AAC2B;AACA;AAGlB,wBAJD,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;AAC3B,wBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAG,CAAC,CAAC,CAAC;AACxC;AAE6B;AAE5B;AACuB,wBAHhB,qBAAM,IAAI,CAAC,WAAW,EAAE,EAAA;AAAC;AAE5B,wBAFG,SAAwB,CAAC;AACjC;AAC2B;AACA;AAEN,wBAHb,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;AAC3B,wBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAG,CAAC,CAAC,CAAC;AACxC;AAEgB;AACO;AACY;AAAuC,wBADpE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9B,wBAAM,qBAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAC,CAAC,EAAA;AAAC;AACpG,wBADrB,SAAwH,CAAC;AAC/H,wBAAM,UAAU;AAAM;AACQ;AACT,wBAFJ;AAEA;AAMd;AAGO,4CAVF,qBAAM,IAAI,CAAC,cAAc,EAAE,EAAA;AAAC;AAE9B,wCAFE,SAA2B,CAAC;AACpC,wCAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,wCAAQ,OAAO,EAAE,CAAC;AAClB;AAK8B;AAEL;AACF,6BARhB,GAAE,EAAE,CAAC,CAAC;AACb;AAI4B;AAErB;AAAgB,aANlB,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACC;AAAgB;AAC7B;AACD;AAAQ,IAHC,0CAAS;AAAO;AACC;AAAgB;AAC7B;AAEb;AAAQ,IAJP,UAAkB,IAAU;AAC9B,QADE,iBA4CC;AACH,QA5CI,OAAO,IAAI,OAAO;AAAM;AACtB;AAEH;AAAuB;AACzB,QAJsB,UAAO,OAAO,EAAE,MAAM;AAG1B;AACC;AAEb;AAEc;AACG;AACtB;AAAmD,wBAPlC,qBAAM,QAAQ,EAAE,EAAA;AAAC;AAE/B,wBAFG,QAAQ,GAAG,SAAgB,CAAC;AACpC;AAEM;AACoB;AAErB,wBAJG,MAAM,CAAC,KAAG,CAAC,CAAC;AACpB;AAEU;AACL,wBAFO,GAAG,GAAG,IAAI,KAAK,EAAE;AAC7B,wBAAM,GAAG,CAAC,MAAM;AAAQ;AACM;AACtB,wBAFW;AAEf;AAAgD;AACX;AAEtC;AAA4C;AAEP,wCALhC,IAAI,CAAC,WAAW,sBAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAA,CAAC;AAC/E,wCAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC3C,wCAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC7C,wCAAc,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;AACrD,wCAAQ,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC;AACgC,wCAAlB,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK;AACrE,8CAAY,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAA,EAA7C,wBAA6C;AAAC,wCAChD,KAAA,IAAI,CAAA;AAAC,wCAAc,qBAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA;AAAC;AAEhC,wCAFvB,GAAK,WAAW,GAAG,SAAmC,CAAC;AACjE;AAC4C;AACjB,wCADnB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC5D,wCAAQ,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;AAC9D,wCAAQ,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxD,wCAAQ,OAAO,EAAE,CAAC;AAClB;AAKW;AAER;AACM,6BARF,CAAA,CAAC;AACR,wBAAM,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC;AACzB;AAG8B;AAExB;AAAgB,aALjB,EAAC,CAAC;AACP;AAEG;AACI;AACe;AACd,QADJ,SAAS,QAAQ;AACrB,YAAM,OAAO,IAAI,OAAO;AAAM;AACd;AACR;AAA2B;AACrB,YAHW,UAAC,OAAO,EAAE,MAAM;AAAI;AACf,oBAAhB,MAAM,GAAG,IAAI,UAAU,EAAE;AACvC,gBAAQ,MAAM,CAAC,MAAM;AAAQ;AACD;AAEd;AAAoB,gBAHV,UAAC,KAAK;AAAI,oBACxB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjC,iBAAS,CAAA,CAAC;AACV,gBAAQ,MAAM,CAAC,OAAO;AAAQ;AAEzB;AACoB;AAChB,gBAJgB,UAAC,GAAG;AAAI,oBACvB,MAAM,CAAC,GAAG,CAAC,CAAC;AACtB,iBAAS,CAAA,CAAC;AACV,gBAAQ,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO,EAAC,CAAC;AACT,SAAK;AACL,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAEJ;AAAQ;AACC;AACX;AACC;AAAQ;AACM;AAA6B;AAC9B;AAAQ,IALtB,4CAAW;AAAI;AACC;AACX;AACC;AAAQ;AACM;AACpB;AAAmB;AAAQ,IAL3B,UAAY,SAAgB;AAC9B,QADE,iBAyCC;AACH,QA1Cc,0BAAA,EAAA,gBAAgB;AAC9B,QAAI,OAAO,IAAI,OAAO;AAAM;AAChB;AACL;AACF;AAAY,QAHM,UAAC,OAAO,EAAE,MAAM;AAAI,YACrC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU;AAAM;AACE;AAAgB,YADvB;AACX;AAAiC,oBAAzB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;AAC/C;AACQ,gBAAA,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/B,gBAAQ,IAAI,SAAS,EAAE;AACvB,oBAAU,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC/B,iBAAS;AAAC,qBAAK;AACf,oBAAU,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC/B,iBAAS;AACT,gBACQ,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACzC;AACQ,gBAAA,GAAG,CAAC,MAAM,EAAE,CAAC;AACrB;AACQ;AAAiC,oBAA3B,wBAAwB,GAAG,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC;AAC9D,gBAAQ,MAAM,CAAC,MAAM,CAAC,wBAAwB,EAAE,KAAI,CAAC,iBAAiB,CAAC,CAAC;AACxE;AAAiC,oBAAnB,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC;AACxD;AACQ;AACQ,gBAAR,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;AACxD;AACQ;AACL,oBADW,mBAAmB,GAAG;AACpC,oBAAU,KAAK,EAAE,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,wBAAwB,CAAC,KAAK;AAC9E,oBAAU,MAAM,EAAE,KAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,wBAAwB,CAAC,MAAM;AACjF,iBAAS;AACT;AAEO,gBAAC,IAAI,SAAS,EAAE;AACvB,oBAAU,KAAI,CAAC,aAAa,CAAC,eAAe,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AAC9G,iBAAS;AAAC,qBAAK;AACf,oBAAU,KAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AAClH,iBAAS;AACT,gBAAQ,KAAI,CAAC,WAAW,EAAE,CAAC,IAAI;AAAM;AACT;AACnB,gBAFuB;AAC1B,oBAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS,EAAC,CAAC;AACX,aAAO,GAAE,EAAE,CAAC,CAAC;AACb,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACI;AAAO;AAAgB;AAC3B;AAAQ,IAFZ,+CAAc;AAAO;AACI;AAAO;AAC9B;AAAmB;AAC1B,IAHH;AAAc,QAAd,iBAuKC;AACH,QAvKI,OAAO,IAAI,OAAO;AAAM;AAChB;AACL;AACF;AAAY,QAHM,UAAC,OAAO,EAAE,MAAM;AAAI,YACrC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU;AAAM;AACE;AAAgB,YADvB;AACX;AACQ;AACV,oBADU,qBAAqB,GAAG,GAAG;AACzC;AAAiC,oBAAnB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;AAC/C;AAAiC,oBAAnB,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC;AAChE;AAAiC,oBAAnB,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,qBAAqB,EAAE,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC;AACrG;AAAiC,oBAAnB,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACvC;AACQ,gBAAA,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACrD,gBAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;AAClE,gBAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACpC;AAEO,gBAAC,IAAI,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,KAAK,UAAU,EAAE;AACpE,oBAAU,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;AACzH,iBAAS;AAAC,qBAAK,IAAI,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,KAAK,eAAe,EAAE;AAChF,oBAAU,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,sBAAsB,EAC1F,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAChG,iBAAS;AAAC,qBAAK,IAAI,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,KAAK,mBAAmB,EAAE;AACpF,oBAAU,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,0BAA0B,EAC9F,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAChG,iBAAS;AACT;AACgC,oBAAlB,QAAQ,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE;AAC3C;AAAiC,oBAAnB,SAAS,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE;AACtC,gBAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;AACzF;AAAiC,oBAAnB,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC;AACQ;AACO,oBADD,KAAK,GAAG,EAAE;AACxB,gBAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;AAClD;AAAqC,wBAArB,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC;AAAqC,wBAArB,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;AACtC;AACW,wBADG,GAAG,GAAG,IAAI;AACxB,oBAAU,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;AACrD,2BAAe,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC;AACjE,2BAAe,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,EACtC;AACZ,wBAAY,SAAS;AACrB,qBAAW;AACX,oBACU,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,wBAAY,IACE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;AACxC,+BAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;AACrF,+BAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EACjF;AACd,4BAAc,GAAG,GAAG,KAAK,CAAC;AAC1B,4BAAc,MAAM;AACpB,yBAAa;AACb,qBAAW;AACX,oBACU,IAAI,GAAG,EAAE;AACnB,wBAAY,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,qBAAW;AACX,iBAAS;AACT;AACgC,oBAApB,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC;AACvC,gBAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C;AACU;AACU;AACU;AAE1B;AAEK;AACmB;AACJ;AAEf;AAAyC;AAAmC;AAC5E,oBADC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AACpG,2BAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;AACxF,+BAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,GACxG;AACZ,wBAAY,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,qBAAW;AACX,iBAAS;AACT;AACQ;AACQ;AACQ;AAEvB;AAAuC;AACtB,oBADJ,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;AACrD;AACQ,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,oBAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC;AAChE,oBAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC;AAChE,iBAAS;AACT;AAGM;AAAiC,oBAAzB,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC;AACzC,gBACQ,GAAG,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAQ,SAAS,CAAC,MAAM,EAAE,CAAC;AAC3B,gBAAQ,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC1B;AACQ,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO;AAAM;AACT;AAC1B;AAEO,gBAJuB,UAAA,GAAG;AAAI,oBAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC;AACxD,iBAAS,EAAC,CAAC;AACX;AAEA,oBADY,kBAAkB;AAC9B;AACgC,oBAAlB,UAAU,GAAe,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC;AAC5H;AAAiC,oBAAnB,WAAW,GAAe,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC;AAC7H;AAAiC,oBAAnB,UAAU,GAAe,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC;AAC5H;AAAiC,oBAAnB,WAAW,GAAe,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC;AAC7H;AACgC,oBAAlB,KAAK,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC;AACxE;AACU,oBADI,EAAE,GAAG,EAAE;AACrB;AAES,oBAFK,EAAE,GAAG,EAAE;AACrB,gBACQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,oBAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AACrC,wBAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,qBAAW;AAAC,yBAAK;AACjB,wBAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,qBAAW;AACX,iBAAS;AACT;AAEO;AAEO,gBAAN,IAAI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3D,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,iBAAS;AAAC,qBAAK;AACf,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,iBAAS;AACT,gBACQ,IAAI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3D,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,iBAAS;AAAC,qBAAK;AACf,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,oBAAU,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,iBAAS;AACT;AAGM,gBAAE,IAAI,KAAI,CAAC,MAAM,CAAC,mBAAmB;AAC3C,uBAAa,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EACrC;AACV,oBAAU,kBAAkB,GAAG;AAC/B,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,EAAE,UAAU,CAAC;AACpF,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,EAAE,WAAW,CAAC;AACrF,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,EAAE,UAAU,CAAC;AACpF,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,EAAE,WAAW,CAAC;AACrF,qBAAW,CAAC;AACZ,iBAAS;AAAC,qBAAK;AACf,oBAAU,kBAAkB,GAAG;AAC/B,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC3E,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACzF,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC1G,wBAAY,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC5F,qBAAW,CAAC;AACZ,iBAAS;AACT,gBAEQ,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;AAChE;AACQ,gBAAA,OAAO,EAAE,CAAC;AAClB,aAAO,GAAE,EAAE,CAAC,CAAC;AACb,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AAAQ;AAA6B;AAGlC;AAAmB;AAAQ,IAH5B,sCAAK;AAAO;AAA6B;AAGlC;AAAmB;AAAQ,IAHlC,UAAM,UAAU,EAAE,aAAa;AAAI;AAEtB,YAAP,KAAK,GAAG,CAAC;AACjB,QAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,YAAM,IAAI,UAAU,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC7C,gBAAQ,KAAK,EAAE,CAAC;AAChB,aAAO;AACP,SAAK;AACL,QACI,OAAO,KAAK,IAAI,CAAC,CAAC;AACtB,KACG;AAEH;AAAQ;AAA6B;AACf;AAAmB;AACtC,IAFD,uCAAM;AAAO;AAA6B;AACf;AAC3B;AAEG,IAJH,UAAO,UAAU,EAAE,gBAAgB;AAAI,QACrC,OAAO,UAAU,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC7C,KAAG;AAEH;AAAQ;AAAgB;AAA2B;AACrC;AAAQ,IADZ,oDAAmB;AAAO;AAAgB;AAC7B;AAAmB;AAAQ,IADhD,UAA4B,QAAa;AAAI,QAC3C,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAClH,YAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7G,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACJ;AAAgB;AAAmB;AACtC,IAFG,0CAAS;AAAO;AACJ;AAAgB;AAC3B;AAAQ,IAFjB;AAAc,QAAd,iBAsDC;AACH,QAtDI,OAAO,IAAI,OAAO;AAAM;AAChB;AACL;AACF;AAAY,QAHM,UAAC,OAAO,EAAE,MAAM;AAAI,YACrC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU;AAAM;AACE;AAAgB,YADvB;AACX;AAAiC,oBAAzB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;AAC/C;AAEO;AACH,oBADU,iBAAiB,GAAG;AAClC,oBAAU,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxC,oBAAU,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzC,oBAAU,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC5C,oBAAU,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC3C,iBAAS,CAAC,GAAG;AAAM;AACW;AAA+B;AAAoB,gBADnE,UAAA,KAAK;AAAI,oBACb,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC;AACpF,iBAAS,EAAC;AACV;AAEO;AAAiC,oBAA1B,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACtG;AAAiC,oBAAnB,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7F;AAAiC,oBAAnB,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,KAAI,CAAC,gBAAgB;AAChF;AACQ;AAAiC,oBAA3B,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACjG;AAAiC,oBAAnB,WAAW,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACpG;AAAiC,oBAAnB,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,KAAI,CAAC,gBAAgB;AACnF;AACQ;AACD,oBADO,eAAe,GAAG;AAChC,oBAAU,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,oBAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3B,oBAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;AACvC,oBAAU,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;AAC5B,iBAAS;AACT;AAEO;AAAiC,oBAA1B,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,OAAT,EAAE,WAAW,iBAAiB,GAAE;AACtF;AAAiC,oBAAnB,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,OAAT,EAAE,WAAW,eAAe,GAAE;AACpF;AAAiC,oBAAnB,eAAe,GAAG,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,CAAC;AAClE;AACQ;AAAiC,oBAA3B,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;AACtD;AACQ,gBAAA,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;AAClH,gBAAQ,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACzC,gBACQ,GAAG,CAAC,MAAM,EAAE,CAAC;AACrB,gBAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;AACpB,gBAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;AACpB,gBAAQ,eAAe,CAAC,MAAM,EAAE,CAAC;AACjC,gBACQ,KAAI,CAAC,wBAAwB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;AACxD,gBAAQ,KAAI,CAAC,WAAW,EAAE,CAAC,IAAI;AAAM;AACT;AACnB,gBAFuB;AAC1B,oBAAI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS,EAAC,CAAC;AACX,aAAO,GAAE,EAAE,CAAC,CAAC;AACb,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAEJ;AAAQ;AAAQ;AACT;AAAgB;AAItB;AAEM;AAAmB;AAAQ,IAP1B,4CAAW;AAAO;AACT;AAAgB;AAItB;AAEM;AAAmB;AACnC,IARD,UAAoB,OAAgB;AAAI,QAAxC,iBA+DC;AACH,QA/DI,OAAO,IAAI,OAAO;AAAM;AACtB;AACL;AAAuB;AACb,QAHY,UAAO,OAAO,EAAE,MAAM;AAE5B;AACK;AAEf;AACmC,gBALpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC;AACU,gBAAE,OAAO,GAAG;AACtB,oBAAQ,IAAI,EAAE,KAAK;AACnB,oBAAQ,EAAE,EAAE,IAAI;AAChB,oBAAQ,MAAM,EAAE,EAAE,CAAC,sBAAsB;AACzC,oBAAQ,gBAAgB,EAAE,EAAE;AAC5B,oBAAQ,WAAW,EAAE,EAAE;AACvB,oBAAQ,KAAK,EAAE,GAAG;AAClB,oBAAQ,SAAS,EAAE,IAAI;AACvB,iBAAO;AACP,gBAAY,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AAC7C,gBACM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AACrC,oBAAQ,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;AACzC,iBAAO;AACP,gBACM,QAAQ,IAAI,CAAC,cAAc;AACjC,oBAAQ,KAAK,UAAU;AACvB,wBAAU,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC;AAC7B,wBAAU,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;AACpC,wBAAU,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;AAC/B,wBAAU,MAAM;AAChB,oBAAQ,KAAK,aAAa;AAC1B,wBAAU,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;AACpC,wBAAU,MAAM;AAChB,oBAAQ,KAAK,KAAK;AAClB,wBAAU,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,0BAA0B,CAAC;AACzD,wBAAU,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACxC,wBAAU,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;AACnC,wBAAU,MAAM;AAChB,oBAAQ,KAAK,KAAK;AAClB,wBAAU,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AAC9B,wBAAU,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACxC,wBAAU,MAAM;AAChB,iBAAO;AACP,gBACM,UAAU;AAAM;AACA;AACb,gBAFQ;AAEI;AAA+B;AAGjC;AACC;AAAoC,gCALhD,IAAI,OAAO,CAAC,SAAS,EAAE;AAC/B,oCAAU,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACvD,iCAAS;AACT,gCAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC1B,oCAAgB,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACzC,oCAAU,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;AACpE,iCAAS;AACT,gCAAQ,IAAI,OAAO,CAAC,EAAE,EAAE;AACxB,oCAAU,IAAI,OAAO,CAAC,SAAS,EAAE;AACjC,wCAAY,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC3I,qCAAW;AAAC,yCAAK;AACjB,wCAAY,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,wCAAY,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;AAC/D,qCAAW;AACX,iCAAS;AACT,gCAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,oCAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAC3C,iCAAS;AACT,gCAAQ,qBAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAA;AAAC;AACD,gCAD3B,SAA2B,CAAC;AACpC,gCAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,gCAAQ,OAAO,EAAE,CAAC;AAClB;AAKsB;AAA0B;AAAwB,qBALjE,GAAE,EAAE,CAAC,CAAC;AACb;AAIoB;AAAgB,aAJ/B,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACG;AAAgB;AACtB;AAAmB;AAC1B,IAHM,uCAAM;AAAO;AACG;AAAgB;AACtB;AACf;AAAQ,IAHX,UAAe,KAAwB;AAAI,QAA3C,iBAiCC;AACH,QAjCI,OAAO,IAAI,OAAO;AAAM;AAChB;AACL;AACF;AAAY,QAHM,UAAC,OAAO,EAAE,MAAM;AAAI,YACrC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU;AAAM;AACE;AACtB,YAFe;AACX;AACL,oBADa,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AACpC;AAAiC,oBAAnB,iBAAiB,GAAG;AAClC,oBAAU,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;AACjC,oBAAU,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM;AACnC,iBAAS;AACT;AAAiC,oBAAnB,gBAAgB,GAAG;AACjC,oBAAU,KAAK,EAAE,CAAC;AAClB,oBAAU,MAAM,EAAE,CAAC;AACnB,iBAAS;AACT,gBAAQ,IAAI,iBAAiB,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE;AAC7E,oBAAU,gBAAgB,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACzE,oBAAU,gBAAgB,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,iBAAiB,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC;AAC/H,oBAAU,IAAI,gBAAgB,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,EAAE;AAChF,wBAAY,gBAAgB,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC;AAC7E,wBAAY,gBAAgB,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC;AACjI,qBAAW;AACX;AAAqC,wBAArB,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAC5G,oBAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC1D;AAAqC,wBAArB,YAAY,sBAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAA;AAClF,oBAAU,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;AACvC,oBAAU,GAAG,CAAC,MAAM,EAAE,CAAC;AACvB,oBAAU,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,CAAC,YAAY,CAAC,CAAC;AAChC,iBAAS;AAAC,qBAAK;AACf,oBAAU,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,iBAAS;AACT,aAAO,GAAE,EAAE,CAAC,CAAC;AACb,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AACuB;AAC9B;AACU;AACA;AACb,IALM,4CAAW;AAAO;AAEvB;AACC;AACM;AACF;AACP,IAND,UAAoB,KAAW;AACjC,QADE,iBAgBC;AACH,QAhBI,OAAO,IAAI,OAAO;AAAM;AAChB;AAEL;AACE;AACH,QALiB,UAAC,OAAO,EAAE,MAAM;AAAI;AAEhC,gBADD,GAAG;AACb,YAAM,IAAI,KAAK,EAAE;AACjB,gBAAQ,GAAG,GAAG,KAAK,CAAC;AACpB,aAAO;AAAC,iBAAK;AACb,gBAAQ,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;AAC1C,aAAO;AACP;AAA6B,gBAAjB,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE;AAC9B;AAA6B,gBAAjB,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACrC,YAAM,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC9F,YAAM,EAAE,CAAC,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;AACvD,YAAM,GAAG,CAAC,MAAM,EAAE,CAAC;AACnB,YAAM,GAAG,CAAC,MAAM,EAAE,CAAC;AACnB,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK,EAAC,CAAC;AACP,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAEJ;AAAQ;AAA0B;AACnC;AAA0B;AAC3B;AACa;AAAgB;AAAsB;AAAmB;AACnE,IAJK,yDAAwB;AAAI;AACnC;AAA0B;AACT;AAAQ;AACa;AAAgB;AACrD;AAAmB;AAAQ,IAJ7B,UAAiC,GAAsB;AACzD;AACI,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC1E,QAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC5E,QAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AACrE,QAAI,IAAI,CAAC,aAAa,GAAG;AACzB,YAAM,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAI;AACxF,YAAM,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI;AAC3F,YAAM,aAAa,EAAE,mBAAgB,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE,mBAAa,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,QAAK;AACjI,YAAM,cAAc,EAAE,mBAAgB,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE,mBAAa,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,QAAK;AAClI,SAAK,CAAC;AACN,QAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAC,CAAC,CAAC;AACvH,KAAG;AAEH;AACE;AACE;AACE;AAAQ;AAAkD;AAAgB;AAAwB;AACxF;AAEhB;AAAQ,IAHE,oDAAmB;AAAO;AAAkD;AAAgB;AACzF;AAEV;AAAmB;AAAQ,IAH5B,UAA4B,KAAa,EAAE,MAAc;AAAI;AAAyB,YAC9E,KAAK,GAAG,KAAK,GAAG,MAAM;AAChC;AACwB,YAAd,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;AACvE,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,EAAE;AAC7D;AAAyB,YAAf,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,GAAG;AACxD;AACA,YADU,UAAU,GAAG;AACvB,YAAM,KAAK,EAAE,QAAQ;AACrB,YAAM,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1C,YAAM,KAAK,EAAE,KAAK;AAClB,SAAK;AACL,QACI,IAAI,UAAU,CAAC,MAAM,GAAG,SAAS,EAAE;AACvC,YAAM,UAAU,CAAC,MAAM,GAAG,SAAS,CAAC;AACpC,YAAM,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;AACvD,SAAK;AACL,QAAI,OAAO,UAAU,CAAC;AACtB,KAAG;AAEH;AACE;AACE;AAEJ;AAAQ;AAAQ;AACH;AAAgB;AAE1B;AAKA;AAAQ,IARD,yCAAQ;AAAO;AACH;AAAgB;AAItC;AAGY;AAAQ,IARlB,UAAiB,KAAiB;AACpC,QADE,iBAIC;AACH,QAJI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;AAAM;AACX;AAAuB;AAAY,QAD7B,UAAA,KAAK;AAAI,YAC/B,OAAO,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACjE,SAAK,EAAC,CAAC;AACP,KAAG,CA32BK;AAAC;mCALR,SAAS,SAAC,rDAKqB;QAJ9B,QAAQ,EAAE,iBAAiB,nCAQjB,gBAbJ,gBAAgB;qBAMtB,rBAN0B,gBANpB,aAAa;AAAI,gBACjB,cAAc;AAAG;AAAU;AACjB,gCAuGf,SAAS,SAAC,eAAe,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC;AAAO,6BAYpD,MAAM;AAAK,6BAIX,MAAM;AAAK,wBAIX,MAAM;AAAK,wBAIX,MAAM;AAAK,6BAIX,MAAM;AAAK,uBASX,KAAK;AAAK,yBAqBV,KAAK;AAAI;;;;;;;;;;;;;;;;;;;;;;;uGAvJqC,wlBAEhD;;;;;;;;;;;;;;;;;;;;;;;;;oBAqJiB;AAAC,IAwtBnB,6BAAC;AAED,CAn3BA,IAi3BC;AACD;AAEQ;AAAqB,IA92B3B,uCAAU;AACZ;AAEC;AACE;AACW;AAAQ,IAApB,yCAA2B;AAC7B;AAAQ;AAIP;AAAiB;AAAgB;AAAQ,IAExC,+CAAiD;AACnD;AAEC;AAAqC;AAAiB;AAEpD;AAAQ,IAST,iDAAgC;AAClC;AACE;AACE;AACW;AAAQ,IAArB,+CAAkD;AACpD;AACE;AACE;AACW;AAAQ,IAArB,6CAAgD;AAClD;AACO;AACS;AACJ;AAEZ;AAAQ,IAEN,yCAAwB;AAC1B;AACE;AACE;AACW;AACf,IADE,6CAAoB;AACtB;AACE;AACE;AACW;AAAQ,IAArB,sCAAgC;AAClC;AACE;AACE;AACW;AAAgB;AAE/B,IAFE,gDAAmC;AACrC;AACO;AACD;AAAiB;AACZ;AAAQ,IAIjB,kDAA0C;AAC5C;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,iDAGE;AACJ;AACE;AACE;AACW;AAAQ,IAArB,mDAAmC;AACrC;AACE;AACE;AACW;AAAgB;AAC5B,IADD,kDAAiC;AACnC;AACE;AACE;AACW;AACf;AACE,IAFA,+CAA4B;AAC9B;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,6CAAuC;AACzC;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,+CAAkF;AACpF;AACE;AACE;AACW;AAAgB;AAAQ,IAArC,wCAA2C;AAC7C;AACO;AAEW;AAEZ;AAAQ,IAEZ,4CAAwE;AAC1E;AACE;AACE;AACW;AAAQ,IAArB,4CAAoE;AACtE;AACE;AACE;AACW;AAAQ,IAArB,uCAA6D;AAC/D;AACE;AACE;AACW;AAAQ,IAArB,uCAAqE;AACvE;AACE;AACE;AACW;AAAQ,IAArB,4CAA0E;AAC5E;AACO;AAEK;AAEJ;AAAQ,IAwBd,wCAAkC;AACpC;AACO;AAAiB;AAAgB;AAAQ,IAAlC,2CAAmC;AAAC;AAAQ;AAAiB;AAAgB;AAAQ,IAAhD,+CAAoC;AAAC;AAAQ;AAAiB;AAChH;AAAQ,IADgF,6CAAmC;AAAC;AAAE;AAC5H;AAEC;AAwtBJ;AAAQ;AAEG;AAAI;AAEV,IAgEH,2BAAY,OAAyB;AACvC,QADE,iBAkBC;AACH;AAES;AAA2D;AAAY,QArF9E,uBAAkB,GAAoB;AACxC,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,EAAE,KAAK;AACjB,SAAG,CAAC;AACJ;AACM;AAEA;AAAY,QAAhB,0BAAqB,GAAG,SAAS,CAAC;AACpC;AACM;AAEA;AAAY,QAAhB,qBAAgB,GAAuC;AACzD,YAAI,KAAK,EAAE,OAAO;AAClB,YAAI,MAAM,EAAE,OAAO;AACnB,SAAG,CAAC;AACJ;AACM;AAEA;AAAY,QAAhB,aAAQ,GAAuC;AACjD,YAAI,QAAQ,EAAE,UAAU;AACxB,YAAI,GAAG,EAAE,CAAC;AACV,YAAI,IAAI,EAAE,CAAC;AACX,SAAG,CAAC;AACJ;AAEK;AAEA;AAAY,QAAf,qBAAgB,GAAkC,QAAQ,CAAC;AAC7D;AACM;AAEA;AAAY,QAAhB,oBAAe,GAAG,cAAc,CAAC;AACnC;AACM;AAEA;AAAY,QAAhB,kBAAa,GAAG,SAAS,CAAC;AAC5B;AACM;AAEA;AAAY,QAAhB,kBAAa,GAAe,QAAQ,CAAC;AACvC;AACM;AAEA;AAAY,QAAhB,uBAAkB,GAAoB;AACxC,YAAI,KAAK,EAAE,EAAE;AACb,YAAI,MAAM,EAAE,EAAE;AACd,SAAG,CAAC;AACJ;AACM;AAAmC;AAAY,QAUnD,uBAAkB,GAAG,CAAC,CAAC;AACzB;AACM;AAEA;AAAY,QAAhB,oBAAe,GAAG,GAAG,CAAC;AACxB,QAEI,IAAI,OAAO,EAAE;AACjB,YAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO;AAAM;AACd;AAIxB;AAAgB,YALiB,UAAA,GAAG;AAAI,gBAClC,KAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACjC,aAAO,EAAC,CAAC;AACT,SAAK;AACL,QACI,IAAI,CAAC,WAAW,GAAG,EAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAC,CAAC;AACxE,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC3D,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,QACI,IAAI,CAAC,YAAY,GAAG;AACxB,YAAM,KAAK,EAAE,IAAI,CAAC,aAAa;AAC/B,YAAM,KAAK,EAAE,IAAI,CAAC,aAAa;AAC/B,YAAM,KAAK,EAAE,CAAC;AACd,YAAM,MAAM,EAAE,CAAC;AACf,SAAK,CAAC;AACN,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC9D,KAAG;AACH,IAAA,wBAAC;AAAD,CAAC,IAAA;AACD;AACY;AAAQ;AAAuD;AAAiB;AAAQ,IArFlG,+CAGE;AACJ;AACE;AACE;AACW;AAAQ,IAArB,kDAAkC;AACpC;AACE;AACE;AACW;AAAQ,IAArB,6CAGE;AACJ;AACE;AACE;AACW;AAAQ,IAArB,qCAIE;AACJ;AAEC;AACE;AACW;AAAQ,IAApB,6CAA2D;AAC7D;AACE;AACE;AACW;AAAQ,IAArB,4CAAiC;AACnC;AACE;AACE;AACW;AAAQ,IAArB,0CAA0B;AAC5B;AACE;AACE;AACW;AAAQ,IAArB,0CAAqC;AACvC;AACE;AACE;AACW;AAAQ,IAArB,+CAGE;AACJ;AACE;AACE;AACW;AAAQ,IAArB,yCAA2B;AAC7B;AACE;AACE;AACW;AAAQ,IAArB,wCAAiD;AACnD;AACE;AACE;AACW;AAAQ,IAArB,+CAAuB;AACzB;AACE;AACE;AACW;AAAQ,IAArB,4CAAsB;AACxB;AACC;AAAC;AAAI;AAAkC;AAER;AAKuC;AACrE;AACA,IC37BF;AAEQ,KA2CP;AACD;AAAQ;AAAyB;AAAmB;AAAQ,IATnD,gCAAO;AAAO;AAAyB;AAC3C;AACL,IAFE,UAAe,MAAoB;AAAI,QACrC,OAAO;AACX,YAAM,QAAQ,EAAE,wBAAwB;AACxC,YAAM,SAAS,EAAE;AACjB,gBAAQ,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE;AACxD,aAAO;AACP,SAAK,CAAC;AACN,KAAG;4DA5CF,QAAQ,SAAC;MACR,YAAY,EAAE,0BACZ,0BAA0B,0BAC1B,sBAAsB,0BACtB,wBAAwB;oBACxB;gBAAsB;gBACvB;mBACD,OAAO,EAAE;wBACP;WAAgB;UAChB,eAAe;iBACf;GAAa,0BACb;aAAoB;aACpB,aAAa;uBACb;gBAAsB;;MACtB,YAAY;kBACZ;QAAe;WACf,eAAe;sBACf;UAAW,uBACZ;mBACD,OAAO,EAAE,0BACP,gBAAgB,0BAChB,eAAe,0BACf,aAAa,0BACb;YAAoB;MACpB,aAAa;WACb,sBAAsB,0BACtB,sBAAsB;mBACvB;gBACD;QAAe,EAAE;MACf;KAAsB,uBACvB;kBACD;KAAS,EAAE;QACT,gBAAgB;yBAChB,aAAa,uBACd;KACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDACQ;AAAC,IASV,+BAAC;AACA,CA9CD;AAAK;AAAC;AAAI;AAEI;AACO;AAOb;AAAI;AAAI;AACR;AAAI,0BCpBX;AACD;AAEQ;AAAqB,IAP3B,4BAAe;AACjB;AACC,IADC,8BAAiB;AACnB;AACG,IADD,4BAAe;AACjB;AAGC,IAHC,4BAAc;AAChB;AACA;AACG;AACoD;AAEjD;AAAI,8BAGT;AACD;AAEQ;AAAqB,IAL3B,gCAAc;AAChB;AAGA,IAHE,iCAAe;AACjB;AACA;AACG;AACyD;AAEtD;AAAI,mCAuBT;AACD;AAEQ;AAAqB,IAzB3B,6CAAkE;AACpE;AACE;AACE;AAEA;AACE,IAFJ,wCAAkB;AACpB;AACE;AACE;AAEJ;AACK;AACE,IAFL,yCAAmB;AACrB;AACE;AACE;AACE;AAEJ;AAEO;AAAQ,IAFf,iCAAW;AACb;AACE;AACE;AAMH;AACI,IANH,sCAAgB;AAClB;AAEA;AAEC;AAC+C;AAE5C;AAAI,+BA0DP;AACD;AAEQ;AAAQ;AAA0C;AAEpC;AAAQ,IA3D5B,wCAAuB;AACzB;AACE;AACE;AACqB;AAAQ,IAA/B,8CAAqC;AACvC;AACE;AACE;AACqB;AAAQ,IAA/B,iDAA+B;AACjC;AACE;AACE;AACqB;AAAQ,IAA/B,4CAAsD;AACxD;AACE;AACE;AACqB;AAAQ,IAA/B,oCAA8C;AAChD;AACE;AACE;AACqB;AAAQ,IAA/B,4CAAiD;AACnD;AACE;AACE;AACqB;AACpB,IADH,2CAAyB;AAC3B;AACE;AACE;AACqB;AAExB,IAFC,yCAAuB;AACzB;AACE;AACE;AACqB;AACtB,IADD,yCAA2B;AAC7B;AACE;AACE;AACqB;AAAQ,IAA/B,8CAAqC;AACvC;AACE;AACE;AACqB;AACvB,IADA,8CAA4B;AAC9B;AACE;AACE;AACqB;AACpB,IADH,2CAAyB;AAC3B;AACE;AACE;AACqB;AAAQ,IAA/B,yCAAqC;AACvC;AACE;AACE;AACqB;AACzB,IADE,+CAA8B;AAChC;AACC;AAEC;AACuD;AAEpD;AAAI,2BAaR;AACD;AAAa;AAAQ;AAAuG;AAAuD;AAAqB;AAAqB;AAA0B;AAA2B;AAAQ,IANxR,qCAAuB;AACzB;AACE;AACE;AACqB;AAExB,IAFC,uCAA2B;AAC7B;AACA;AAAC;AAAI;AAAkC;AAAiC;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAA2C;AAAsI;AAAI;AAAC;AAAkL","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {ImageDimensions} from '../PublicModels';\r\nimport {LimitException, XYPosition} from '../PrivateModels';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LimitsService {\r\n\r\n\r\n  private limitDirections: RolesArray = ['left', 'right', 'top', 'bottom'];\r\n  /**\r\n   * stores the crop limits limits\r\n   */\r\n  private _limits = {\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0\r\n  };\r\n  /**\r\n   * stores the array of the draggable points displayed on the crop area\r\n   */\r\n  private _points: Array<PointPositionChange> = [];\r\n  /**\r\n   * stores the pane dimensions\r\n   */\r\n  private _paneDimensions: ImageDimensions;\r\n\r\n  // *********** //\r\n  // Observables //\r\n  // *********** //\r\n  public positions: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>(Array.from(this._points));\r\n  public repositionEvent: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>([]);\r\n  public limits: BehaviorSubject<AreaLimits> = new BehaviorSubject<AreaLimits>(this._limits);\r\n  public paneDimensions: BehaviorSubject<ImageDimensions> = new BehaviorSubject({width: 0, height: 0});\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * set privew pane dimensions\r\n   */\r\n  public setPaneDimensions(dimensions: ImageDimensions) {\r\n    return new Promise((resolve, reject) => {\r\n      this._paneDimensions = dimensions;\r\n      this.paneDimensions.next(dimensions);\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * repositions points externally\r\n   */\r\n  public repositionPoints(positions) {\r\n    this._points = positions;\r\n    positions.forEach(position => {\r\n      this.positionChange(position);\r\n    });\r\n    this.repositionEvent.next(positions);\r\n  }\r\n\r\n  /**\r\n   * updates limits and point positions and calls next on the observables\r\n   * @param positionChangeData - position change event data\r\n   */\r\n  public positionChange(positionChangeData: PointPositionChange) {\r\n    // update positions according to current position change\r\n    this.updatePosition(positionChangeData);\r\n\r\n    // for each direction:\r\n    // 1. filter the _points that have a role as the direction's limit\r\n    // 2. for top and left find max x | y values, and min for right and bottom\r\n    this.limitDirections.forEach(direction => {\r\n      const relevantPoints = this._points.filter(point => {\r\n        return point.roles.includes(direction);\r\n      })\r\n      .map((point: PointPositionChange) => {\r\n        return point[this.getDirectionAxis(direction)];\r\n      });\r\n      let limit;\r\n      if (direction === 'top' || direction === 'left') {\r\n        limit = Math.max(...relevantPoints);\r\n      }\r\n      if (direction === 'right' || direction === 'bottom') {\r\n        limit = Math.min(...relevantPoints);\r\n      }\r\n      this._limits[direction] = limit;\r\n    });\r\n\r\n    this.limits.next(this._limits);\r\n    this.positions.next(Array.from(this._points));\r\n  }\r\n\r\n  /**\r\n   * updates the position of the point\r\n   * @param positionChange - position change event data\r\n   */\r\n  public updatePosition(positionChange: PointPositionChange) {\r\n    // finds the current position of the point by it's roles, than splices it for the new position or pushes it if it's not yet in the array\r\n    const index = this._points.findIndex(point => {\r\n      return this.compareArray(positionChange.roles, point.roles);\r\n    });\r\n    if (index === -1) {\r\n      this._points.push(positionChange);\r\n    } else {\r\n      this._points.splice(index, 1, positionChange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check if a position change event exceeds the limits\r\n   * @param positionChange - position change event data\r\n   * @returns LimitException0\r\n   */\r\n  public exceedsLimit(positionChange: PointPositionChange): LimitException {\r\n    const pointLimits = this.limitDirections.filter(direction => {\r\n      return !positionChange.roles.includes(direction);\r\n    });\r\n\r\n    const limitException: LimitException = {\r\n      exceeds: false,\r\n      resetCoefficients: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      resetCoordinates: {\r\n        x: positionChange.x,\r\n        y: positionChange.y\r\n      }\r\n    };\r\n\r\n    // limit directions are the opposite sides of the point's roles\r\n    pointLimits.forEach(direction => {\r\n      const directionAxis = this.getDirectionAxis(direction);\r\n      if (direction === 'top' || direction === 'left') {\r\n        if (positionChange[directionAxis] < this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = 1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      } else if (direction === 'right' || direction === 'bottom') {\r\n        if (positionChange[directionAxis] > this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = -1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (limitException.resetCoefficients.x !== 0 || limitException.resetCoefficients.y !== 0) {\r\n      limitException.exceeds = true;\r\n    }\r\n\r\n    return limitException;\r\n  }\r\n\r\n  /**\r\n   * rotate crop tool points clockwise\r\n   * @param resizeRatios - ratio between the new dimensions and the previous\r\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\r\n   * @param initialPositions - current positions before rotation\r\n   */\r\n  public rotateClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\r\n    // convert positions to ratio between position to initial pane dimension\r\n    initialPositions = initialPositions.map(point => {\r\n      return new PositionChangeData({\r\n        x: point.x / initialPreviewDimensions.width,\r\n        y: point.y / initialPreviewDimensions.height,\r\n      }, point.roles);\r\n    });\r\n    this.repositionPoints(initialPositions.map(point => {\r\n      return this.rotateCornerClockwise(point);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * rotate crop tool points anti-clockwise\r\n   * @param resizeRatios - ratio between the new dimensions and the previous\r\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\r\n   * @param initialPositions - current positions before rotation\r\n   */\r\n  public rotateAntiClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\r\n    // convert positions to ratio between position to initial pane dimension\r\n    initialPositions = initialPositions.map(point => {\r\n      return new PositionChangeData({\r\n        x: point.x / initialPreviewDimensions.width,\r\n        y: point.y / initialPreviewDimensions.height,\r\n      }, point.roles);\r\n    });\r\n    this.repositionPoints(initialPositions.map(point => {\r\n      return this.rotateCornerAntiClockwise(point);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * returns the corner positions after a 90 degrees clockwise rotation\r\n   */\r\n  private rotateCornerClockwise(corner: PointPositionChange): PointPositionChange {\r\n    const rotated: PointPositionChange = {\r\n      x: this._paneDimensions.width * (1 - corner.y),\r\n      y: this._paneDimensions.height * corner.x,\r\n      roles: []\r\n    };\r\n    // rotates corner according to order\r\n    const order: Array<RolesArray> = [\r\n      ['bottom', 'left'],\r\n      ['top', 'left'],\r\n      ['top', 'right'],\r\n      ['bottom', 'right'],\r\n      ['bottom', 'left']\r\n    ];\r\n    rotated.roles = order[order.findIndex(roles => {\r\n      return this.compareArray(roles, corner.roles);\r\n    }) + 1];\r\n    return rotated;\r\n  }\r\n\r\n  /**\r\n   * returns the corner positions after a 90 degrees anti-clockwise rotation\r\n   */\r\n  private rotateCornerAntiClockwise(corner: PointPositionChange): PointPositionChange {\r\n    const rotated: PointPositionChange = {\r\n      x: this._paneDimensions.width * corner.y,\r\n      y: this._paneDimensions.height * (1 - corner.x),\r\n      roles: []\r\n    };\r\n    // rotates corner according to order\r\n    const order: Array<RolesArray> = [\r\n      ['bottom', 'left'],\r\n      ['bottom', 'right'],\r\n      ['top', 'right'],\r\n      ['top', 'left'],\r\n      ['bottom', 'left']\r\n    ];\r\n    rotated.roles = order[order.findIndex(roles => {\r\n      return this.compareArray(roles, corner.roles);\r\n    }) + 1];\r\n    return rotated;\r\n  }\r\n\r\n  /**\r\n   * checks if two array contain the same values\r\n   * @param array1 - array 1\r\n   * @param array2 - array 2\r\n   * @returns boolean\r\n   */\r\n  public compareArray(array1: Array<string>, array2: Array<string>): boolean {\r\n    return array1.every((element) => {\r\n      return array2.includes(element);\r\n    }) && array1.length === array2.length;\r\n  }\r\n\r\n  private getDirectionAxis(direction) {\r\n    return {\r\n      left: 'x',\r\n      right: 'x',\r\n      top: 'y',\r\n      bottom: 'y'\r\n    }[direction];\r\n  }\r\n}\r\n\r\n\r\nexport interface PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n}\r\n\r\nexport interface AreaLimits {\r\n  top: number;\r\n  bottom: number;\r\n  right: number;\r\n  left: number;\r\n}\r\n\r\nexport type RolesArray = Array<Direction>;\r\n\r\nexport class PositionChangeData implements PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n\r\n  constructor(position: XYPosition, roles: RolesArray) {\r\n    this.x = position.x;\r\n    this.y = position.y;\r\n    this.roles = roles;\r\n  }\r\n}\r\n\r\nexport type Direction = 'left' | 'right' | 'top' | 'bottom';\r\n","import {AfterViewInit, Component, Input} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\nimport {LimitException, XYPosition} from '../../PrivateModels';\r\n\r\n@Component({\r\n  selector: 'ngx-draggable-point',\r\n  templateUrl: './ngx-draggable-point.component.html',\r\n})\r\nexport class NgxDraggablePointComponent implements AfterViewInit {\r\n  @Input() width = 10;\r\n  @Input() height = 10;\r\n  @Input() color = '#3cabe2';\r\n  @Input() shape: 'rect' | 'circle' = 'rect';\r\n  @Input() pointOptions: 'rect' | 'circle' = 'rect';\r\n  @Input() limitRoles: Array<'left'|'right'|'top'|'bottom'>;\r\n  @Input() startPosition: XYPosition;\r\n  @Input() container: HTMLElement;\r\n  @Input() private _currentPosition: XYPosition;\r\n  position: XYPosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  private _paneDimensions: ImageDimensions;\r\n  resetPosition: XYPosition;\r\n\r\n  constructor(private limitsService: LimitsService) {}\r\n\r\n  ngAfterViewInit() {\r\n    Object.keys(this.pointOptions).forEach(key => {\r\n      this[key] = this.pointOptions[key];\r\n    });\r\n    // subscribe to pane dimensions changes\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      if (dimensions.width > 0 && dimensions.width > 0) {\r\n        this._paneDimensions = {\r\n          width: dimensions.width,\r\n          height: dimensions.height\r\n        };\r\n        this.position = this.getInitialPosition(dimensions);\r\n        this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n      }\r\n    });\r\n    // subscribe to external reposition events\r\n    this.limitsService.repositionEvent.subscribe(positions => {\r\n      if (positions.length > 0) {\r\n        this.externalReposition(positions);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * returns a css style object for the point\r\n   */\r\n  pointStyle() {\r\n    return {\r\n      width: this.width + 'px',\r\n      height: this.height + 'px',\r\n      'background-color': this.color,\r\n      'border-radius': this.shape === 'circle' ? '100%' : 0,\r\n      position: 'absolute'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * registers a position change on the limits service, and adjusts position if necessary\r\n   * @param position - the current position of the point\r\n   */\r\n  positionChange(position: XYPosition) {\r\n    const positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      // if exceeds limits, reposition\r\n      this.resetPosition = limitException.resetCoordinates;\r\n    } else {\r\n      this.limitsService.positionChange(positionChangeData);\r\n      this._currentPosition = position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * adjusts the position of the point after a limit exception\r\n   */\r\n  private adjustPosition(limitException: LimitException) {\r\n    const newPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    Object.keys(this.startPosition).forEach(axis => {\r\n      newPosition[axis] = limitException.resetCoordinates[axis] + limitException.resetCoefficients[axis];\r\n    });\r\n    this.position = newPosition;\r\n    this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n  }\r\n\r\n  /**\r\n   * called on movement end, checks if last position exceeded the limits ad adjusts\r\n   */\r\n  movementEnd(position: XYPosition) {\r\n    let positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      this.resetPosition = limitException.resetCoordinates;\r\n      if (limitException.exceeds) {\r\n        this.adjustPosition(limitException);\r\n        positionChangeData = new PositionChangeData(this.position, this.limitRoles);\r\n        this.limitsService.updatePosition(positionChangeData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculates the initial positions of the point by it's roles\r\n   * @param dimensions - dimensions of the pane in which the point is located\r\n   */\r\n  private getInitialPosition(dimensions: ImageDimensions) {\r\n    return {\r\n      x: this.limitRoles.includes('left') ? 0 : dimensions.width - this.width / 2,\r\n      y: this.limitRoles.includes('top') ? 0 : dimensions.height - this.height / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * repositions the point after an external reposition event\r\n   * @param positions - an array of all points on the pane\r\n   */\r\n  private externalReposition(positions: Array<PointPositionChange>) {\r\n    positions.forEach(position => {\r\n      if (this.limitsService.compareArray(this.limitRoles, position.roles)) {\r\n        position = this.enforcePaneLimits(position);\r\n        this.position = {\r\n          x: position.x,\r\n          y: position.y\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * returns a new point position if the movement exceeded the pane limit\r\n   */\r\n  private enforcePaneLimits(position: PointPositionChange): PointPositionChange {\r\n    if (this._paneDimensions.width === 0 || this._paneDimensions.height === 0) {\r\n      return position;\r\n    } else {\r\n      if (position.x > this._paneDimensions.width) { position.x = this._paneDimensions.width; }\r\n      if (position.x < 0) { position.x = 1; }\r\n      if (position.y > this._paneDimensions.height) { position.y = this._paneDimensions.height; }\r\n      if (position.y < 0) { position.y = 1; }\r\n    }\r\n    return position;\r\n  }\r\n}\r\n\r\n","import {Component, EventEmitter, Inject, Output} from '@angular/core';\r\nimport {EditorActionButton} from '../../PrivateModels';\r\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef} from '@angular/material/bottom-sheet';\r\n\r\n@Component({\r\n  selector: 'ngx-filter-menu',\r\n  templateUrl: './ngx-filter-menu.component.html',\r\n})\r\nexport class NgxFilterMenuComponent {\r\n  filterOptions: Array<EditorActionButton> = [\r\n    {\r\n      name: 'default',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W'\r\n    },\r\n    {\r\n      name: 'bw2',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 2'\r\n    },\r\n    {\r\n      name: 'bw3',\r\n      icon: 'blur_on',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 3'\r\n    },\r\n    {\r\n      name: 'magic_color',\r\n      icon: 'filter_vintage',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Magic Color'\r\n    },\r\n    {\r\n      name: 'original',\r\n      icon: 'crop_original',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Original'\r\n    },\r\n  ];\r\n  @Output() filterSelected: EventEmitter<string> = new EventEmitter();\r\n  selectOption(optionName) {\r\n    this.data.filter = optionName;\r\n    this.bottomSheetRef.dismiss();\r\n  }\r\n\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<NgxFilterMenuComponent>,\r\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: any\r\n              ) {}\r\n\r\n}\r\n","import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\n\r\n@Component({\r\n  selector: 'ngx-shape-outine',\r\n  templateUrl: './ngx-shape-outline.component.html',\r\n})\r\nexport class NgxShapeOutlineComponent implements AfterViewInit {\r\n\r\n  @Input() color = '#3cabe2';\r\n  @Input() weight: number;\r\n  @Input() dimensions: ImageDimensions;\r\n  @ViewChild('outline') canvas;\r\n\r\n  private _points: Array<PointPositionChange>;\r\n  private _sortedPoints: Array<PointPositionChange>;\r\n  constructor(private limitsService: LimitsService) {}\r\n\r\n  ngAfterViewInit() {\r\n    // init drawing canvas dimensions\r\n    this.canvas.nativeElement.width = this.dimensions.width;\r\n    this.canvas.nativeElement.height = this.dimensions.height;\r\n    this.limitsService.positions.subscribe(positions => {\r\n      if (positions.length === 4) {\r\n        this._points = positions;\r\n        this.sortPoints();\r\n        this.clearCanvas();\r\n        this.drawShape();\r\n      }\r\n    });\r\n    // subscribe to changes in the pane's dimensions\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      this.clearCanvas();\r\n      this.canvas.nativeElement.width = dimensions.width;\r\n      this.canvas.nativeElement.height = dimensions.height;\r\n    });\r\n    // subscribe to reposition events\r\n    this.limitsService.repositionEvent.subscribe( positions => {\r\n      if (positions.length === 4) {\r\n        setTimeout( () => {\r\n          this.clearCanvas();\r\n          this.sortPoints();\r\n          this.drawShape();\r\n        }, 10);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * clears the shape canvas\r\n   */\r\n  private clearCanvas() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\r\n  }\r\n\r\n  /**\r\n   * sorts the array of points according to their clockwise alignment\r\n   */\r\n  private sortPoints() {\r\n    const _points = Array.from(this._points);\r\n    const sortedPoints = [];\r\n\r\n    const sortOrder = {\r\n      vertical: ['top', 'top', 'bottom', 'bottom'],\r\n      horizontal: ['left', 'right', 'right', 'left']\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const roles = Array.from([sortOrder.vertical[i], sortOrder.horizontal[i]]);\r\n      sortedPoints.push(_points.filter((point) => {\r\n        return this.limitsService.compareArray(point.roles, roles);\r\n      })[0]);\r\n\r\n    }\r\n    this._sortedPoints = sortedPoints;\r\n  }\r\n\r\n  /**\r\n   * draws a line between the points according to their order\r\n   */\r\n  private drawShape() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineWidth = this.weight;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    this._sortedPoints.forEach((point, index) => {\r\n      if (index === 0) {\r\n        ctx.moveTo(point.x, point.y);\r\n      }\r\n      if (index !== this._sortedPoints.length - 1) {\r\n        const nextPoint = this._sortedPoints[index + 1];\r\n        ctx.lineTo(nextPoint.x, nextPoint.y);\r\n      } else {\r\n        ctx.closePath();\r\n      }\r\n    });\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData, RolesArray} from '../../services/limits.service';\r\nimport {MatBottomSheet} from '@angular/material/bottom-sheet';\r\nimport {NgxFilterMenuComponent} from '../filter-menu/ngx-filter-menu.component';\r\nimport {EditorActionButton, PointOptions, PointShape} from '../../PrivateModels';\r\n// import {NgxOpenCVService} from '../../services/ngx-opencv.service';\r\nimport {DocScannerConfig, ImageDimensions, OpenCVState} from '../../PublicModels';\r\nimport {NgxOpenCVService} from 'ngx-opencv';\r\n\r\ndeclare var cv: any;\r\n\r\n@Component({\r\n  selector: 'ngx-doc-scanner',\r\n  templateUrl: './ngx-doc-scanner.component.html',\r\n  styleUrls: ['./ngx-doc-scanner.component.scss']\r\n})\r\nexport class NgxDocScannerComponent implements OnInit, OnChanges {\r\n  value = 0;\r\n\r\n  /**\r\n   * editor config object\r\n   */\r\n  options: ImageEditorConfig;\r\n  // ************* //\r\n  // EDITOR CONFIG //\r\n  // ************* //\r\n  /**\r\n   * an array of action buttons displayed on the editor screen\r\n   */\r\n  private editorButtons: Array<EditorActionButton>;\r\n\r\n  /**\r\n   * returns an array of buttons according to the editor mode\r\n   */\r\n  get displayedButtons() {\r\n    return this.editorButtons.filter(button => {\r\n      return button.mode === this.mode;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * max width of the preview area\r\n   */\r\n  private maxPreviewWidth: number;\r\n  /**\r\n   * dimensions of the image container\r\n   */\r\n  imageDivStyle: { [key: string]: string | number };\r\n  /**\r\n   * editor div style\r\n   */\r\n  editorStyle: { [key: string]: string | number };\r\n\r\n  // ************* //\r\n  // EDITOR STATE //\r\n  // ************* //\r\n  /**\r\n   * state of opencv loading\r\n   */\r\n  private cvState: string;\r\n  /**\r\n   * true after the image is loaded and preview is displayed\r\n   */\r\n  imageLoaded = false;\r\n  /**\r\n   * editor mode\r\n   */\r\n  mode: 'crop' | 'color' = 'crop';\r\n  /**\r\n   * filter selected by the user, returned by the filter selector bottom sheet\r\n   */\r\n  private selectedFilter = 'default';\r\n\r\n  // ******************* //\r\n  // OPERATION VARIABLES //\r\n  // ******************* //\r\n  /**\r\n   * viewport dimensions\r\n   */\r\n  private screenDimensions: ImageDimensions;\r\n  /**\r\n   * image dimensions\r\n   */\r\n  private imageDimensions: ImageDimensions = {\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  /**\r\n   * dimensions of the preview pane\r\n   */\r\n  previewDimensions: ImageDimensions;\r\n  /**\r\n   * ration between preview image and original\r\n   */\r\n  private imageResizeRatio: number;\r\n  /**\r\n   * stores the original image for reset purposes\r\n   */\r\n  private originalImage: File;\r\n  /**\r\n   * stores the edited image\r\n   */\r\n  private editedImage: HTMLCanvasElement;\r\n  /**\r\n   * stores the preview image as canvas\r\n   */\r\n  @ViewChild('PreviewCanvas', {read: ElementRef}) private previewCanvas: ElementRef;\r\n  /**\r\n   * an array of points used by the crop tool\r\n   */\r\n  private points: Array<PointPositionChange>;\r\n\r\n  // ************** //\r\n  // EVENT EMITTERS //\r\n  // ************** //\r\n  /**\r\n   * optional binding to the exit button of the editor\r\n   */\r\n  @Output() exitEditor: EventEmitter<string> = new EventEmitter<string>();\r\n  /**\r\n   * fires on edit completion\r\n   */\r\n  @Output() editResult: EventEmitter<Blob> = new EventEmitter<Blob>();\r\n  /**\r\n   * emits errors, can be linked to an error handler of choice\r\n   */\r\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\r\n  /**\r\n   * emits the loading status of the cv module.\r\n   */\r\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /**\r\n   * emits true when processing is done, false when completed\r\n   */\r\n  @Output() processing: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  // ****** //\r\n  // INPUTS //\r\n  // ****** //\r\n  /**\r\n   * set image for editing\r\n   * @param file - file from form input\r\n   */\r\n  @Input() set file(file: File) {\r\n    if (file) {\r\n      setTimeout(() => {\r\n        this.processing.emit(true);\r\n      }, 5);\r\n      this.imageLoaded = false;\r\n      this.originalImage = file;\r\n      this.ngxOpenCv.cvState.subscribe(\r\n        async (cvState: OpenCVState) => {\r\n          if (cvState.ready) {\r\n            // read file to image & canvas\r\n            await this.loadFile(file);\r\n            this.processing.emit(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * editor configuration object\r\n   */\r\n  @Input() config: DocScannerConfig;\r\n\r\n  constructor(private ngxOpenCv: NgxOpenCVService, private limitsService: LimitsService, private bottomSheet: MatBottomSheet) {\r\n    this.screenDimensions = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n    // subscribe to status of cv module\r\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCVState) => {\r\n      this.cvState = cvState.state;\r\n      this.ready.emit(cvState.ready);\r\n      if (cvState.error) {\r\n        this.error.emit(new Error('error loading cv'));\r\n      } else if (cvState.loading) {\r\n        this.processing.emit(true);\r\n      } else if (cvState.ready) {\r\n        this.processing.emit(false);\r\n      }\r\n    });\r\n\r\n    // subscribe to positions of crop tool\r\n    this.limitsService.positions.subscribe(points => {\r\n      this.points = points;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editorButtons = [\r\n      {\r\n        name: 'exit',\r\n        action: () => {\r\n          this.exitEditor.emit('canceled');\r\n        },\r\n        icon: 'arrow_back',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        action: this.rotateImage.bind(this),\r\n        icon: 'rotate_right',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'done_crop',\r\n        action: this.doneCrop(),\r\n        icon: 'done',\r\n        type: 'fab',\r\n        mode: 'crop'\r\n      },\r\n      {\r\n        name: 'back',\r\n        action: this.undo(),\r\n        icon: 'arrow_back',\r\n        type: 'fab',\r\n        mode: 'color'\r\n      },\r\n      {\r\n        name: 'filter',\r\n        action: () => {\r\n          if (this.config.filterEnable) {\r\n            return this.chooseFilters();\r\n          }\r\n        },\r\n        icon: 'photo_filter',\r\n        type: 'fab',\r\n        mode: this.config.filterEnable ? 'color' : 'disabled'\r\n      },\r\n      {\r\n        name: 'upload',\r\n        action: this.exportImage.bind(this),\r\n        icon: 'cloud_upload',\r\n        type: 'fab',\r\n        mode: 'color'\r\n      },\r\n    ];\r\n\r\n    // set options from config object\r\n    this.options = new ImageEditorConfig(this.config);\r\n    // set export image icon\r\n    this.editorButtons.forEach(button => {\r\n      if (button.name === 'upload') {\r\n        button.icon = this.options.exportImageIcon;\r\n      }\r\n    });\r\n    this.maxPreviewWidth = this.options.maxPreviewWidth;\r\n    this.editorStyle = this.options.editorStyle;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.config) {\r\n      if (changes.config.currentValue.thresholdInfo.thresh !== changes.config.previousValue.thresholdInfo.thresh) {\r\n        this.loadFile(this.originalImage);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ***************************** //\r\n  // editor action buttons methods //\r\n  // ***************************** //\r\n\r\n  /**\r\n   * emits the exitEditor event\r\n   */\r\n  exit() {\r\n    this.exitEditor.emit('canceled');\r\n  }\r\n\r\n  getMode(): string {\r\n    return this.mode;\r\n  }\r\n\r\n  async doneCrop() {\r\n    this.mode = 'color';\r\n    await this.transform();\r\n    if (this.config.filterEnable) {\r\n      await this.applyFilter(true);\r\n    }\r\n  }\r\n\r\n  undo() {\r\n    this.mode = 'crop';\r\n    this.loadFile(this.originalImage);\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter, and when done emits the resulted image\r\n   */\r\n  private async exportImage() {\r\n    await this.applyFilter(false);\r\n    if (this.options.maxImageDimensions) {\r\n      this.resize(this.editedImage)\r\n      .then(resizeResult => {\r\n        resizeResult.toBlob((blob) => {\r\n          this.editResult.emit(blob);\r\n          this.processing.emit(false);\r\n        }, this.originalImage.type);\r\n      });\r\n    } else {\r\n      this.editedImage.toBlob((blob) => {\r\n        this.editResult.emit(blob);\r\n        this.processing.emit(false);\r\n      }, this.originalImage.type);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * open the bottom sheet for selecting filters, and applies the selected filter in preview mode\r\n   */\r\n  private chooseFilters() {\r\n    const data = {filter: this.selectedFilter};\r\n    const bottomSheetRef = this.bottomSheet.open(NgxFilterMenuComponent, {\r\n      data: data\r\n    });\r\n    bottomSheetRef.afterDismissed().subscribe(() => {\r\n      this.selectedFilter = data.filter;\r\n      this.applyFilter(true);\r\n    });\r\n\r\n  }\r\n\r\n  // *************************** //\r\n  // File Input & Output Methods //\r\n  // *************************** //\r\n  /**\r\n   * load image from input field\r\n   */\r\n  private loadFile(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      try {\r\n        await this.readImage(file);\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      try {\r\n        await this.showPreview();\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      // set pane limits\r\n      // show points\r\n      this.imageLoaded = true;\r\n      await this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n      setTimeout(async () => {\r\n        await this.detectContours();\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 15);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * read image from File object\r\n   */\r\n  private readImage(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      let imageSrc;\r\n      try {\r\n        imageSrc = await readFile();\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n      const img = new Image();\r\n      img.onload = async () => {\r\n        // set edited image canvas and dimensions\r\n        this.editedImage = <HTMLCanvasElement>document.createElement('canvas');\r\n        this.editedImage.width = img.width;\r\n        this.editedImage.height = img.height;\r\n        const ctx = this.editedImage.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n        // resize image if larger than max image size\r\n        const width = img.width > img.height ? img.height : img.width;\r\n        if (width > this.options.maxImageDimensions.width) {\r\n          this.editedImage = await this.resize(this.editedImage);\r\n        }\r\n        this.imageDimensions.width = this.editedImage.width;\r\n        this.imageDimensions.height = this.editedImage.height;\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        resolve();\r\n      };\r\n      img.src = imageSrc;\r\n    });\r\n\r\n    /**\r\n     * read file from input field\r\n     */\r\n    function readFile() {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (err) => {\r\n          reject(err);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  // ************************ //\r\n  // Image Processing Methods //\r\n  // ************************ //\r\n  /**\r\n   * rotate image 90 degrees\r\n   */\r\n  rotateImage(clockwise = true) {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const dst = cv.imread(this.editedImage);\r\n        // const dst = new cv.Mat();\r\n        cv.transpose(dst, dst);\r\n        if (clockwise) {\r\n          cv.flip(dst, dst, 1);\r\n        } else {\r\n          cv.flip(dst, dst, 0);\r\n        }\r\n\r\n        cv.imshow(this.editedImage, dst);\r\n        // src.delete();\r\n        dst.delete();\r\n        // save current preview dimensions and positions\r\n        const initialPreviewDimensions = {width: 0, height: 0};\r\n        Object.assign(initialPreviewDimensions, this.previewDimensions);\r\n        const initialPositions = Array.from(this.points);\r\n        // get new dimensions\r\n        // set new preview pane dimensions\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        // get preview pane resize ratio\r\n        const previewResizeRatios = {\r\n          width: this.previewDimensions.width / initialPreviewDimensions.width,\r\n          height: this.previewDimensions.height / initialPreviewDimensions.height\r\n        };\r\n        // set new preview pane dimensions\r\n\r\n        if (clockwise) {\r\n          this.limitsService.rotateClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\r\n        } else {\r\n          this.limitsService.rotateAntiClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\r\n        }\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * detects the contours of the document and\r\n   **/\r\n  private detectContours(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        // load the image and compute the ratio of the old height to the new height, clone it, and resize it\r\n        const processingResizeRatio = 0.5;\r\n        const src = cv.imread(this.editedImage);\r\n        const dst = cv.Mat.zeros(src.rows, src.cols, cv.CV_8UC3);\r\n        const dsize = new cv.Size(src.rows * processingResizeRatio, src.cols * processingResizeRatio);\r\n        const ksize = new cv.Size(5, 5);\r\n        // convert the image to grayscale, blur it, and find edges in the image\r\n        cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\r\n        cv.GaussianBlur(src, src, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        cv.Canny(src, src, 75, 200);\r\n        // find contours\r\n\r\n        if (this.config.thresholdInfo.thresholdType === 'standard') {\r\n          cv.threshold(src, src, this.config.thresholdInfo.thresh, this.config.thresholdInfo.maxValue, cv.THRESH_BINARY);\r\n        } else if (this.config.thresholdInfo.thresholdType === 'adaptive_mean') {\r\n          cv.adaptiveThreshold(src, src, this.config.thresholdInfo.maxValue, cv.ADAPTIVE_THRESH_MEAN_C,\r\n            cv.THRESH_BINARY, this.config.thresholdInfo.blockSize, this.config.thresholdInfo.c);\r\n        } else if (this.config.thresholdInfo.thresholdType === 'adaptive_gaussian') {\r\n          cv.adaptiveThreshold(src, src, this.config.thresholdInfo.maxValue, cv.ADAPTIVE_THRESH_GAUSSIAN_C,\r\n            cv.THRESH_BINARY, this.config.thresholdInfo.blockSize, this.config.thresholdInfo.c);\r\n        }\r\n\r\n        const contours = new cv.MatVector();\r\n        const hierarchy = new cv.Mat();\r\n        cv.findContours(src, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\r\n        const cnt = contours.get(4);\r\n        // console.log('----------UNIQUE RECTANGLES FROM ALL CONTOURS----------');\r\n        const rects = [];\r\n        for (let i = 0; i < contours.size(); i++) {\r\n          const cn = contours.get(i);\r\n          const r = cv.minAreaRect(cn);\r\n          let add = true;\r\n          if (r.size.height < 50 || r.size.width < 50\r\n            || r.angle === 90 || r.angle === 180 || r.angle === 0\r\n            || r.angle === -90 || r.angle === -180\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          for (let j = 0; j < rects.length; j++) {\r\n            if (\r\n              rects[j].angle === r.angle\r\n              && rects[j].center.x === r.center.x && rects[j].center.y === r.center.y\r\n              && rects[j].size.width === r.size.width && rects[j].size.height === r.size.height\r\n            ) {\r\n              add = false;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (add) {\r\n            rects.push(r);\r\n          }\r\n        }\r\n\r\n        let rect2 = cv.minAreaRect(cnt);\r\n        for (let i = 0; i < rects.length; i++) {\r\n          // const v = cv.RotatedRect.points(rects[i]);\r\n          // let isNegative = false;\r\n          // for (let j = 0; j < v.length; j++) {\r\n          //   if (v[j].x < 0 || v[j].y < 0) {\r\n          //     isNegative = true;\r\n          //     break;\r\n          //   }\r\n          // }\r\n          // if (isNegative) {\r\n          //   continue;\r\n          // }\r\n          if (((rects[i].size.width * rects[i].size.height) > (rect2.size.width * rect2.size.height)\r\n            && !(rects[i].angle === 90 || rects[i].angle === 180 || rects[i].angle === 0\r\n              || rects[i].angle === -90 || rects[i].angle === -180) && ((rects[i].angle > 85 || rects[i].angle < 5)))\r\n          ) {\r\n            rect2 = rects[i];\r\n          }\r\n        }\r\n        // console.log(rects);\r\n        //\r\n        // console.log('---------------------------------------------------------');\r\n        // console.log(cnt);\r\n        // console.log(rect2);\r\n        const vertices = cv.RotatedRect.points(rect2);\r\n        // console.log(vertices);\r\n        for (let i = 0; i < 4; i++) {\r\n          vertices[i].x = vertices[i].x * this.imageResizeRatio;\r\n          vertices[i].y = vertices[i].y * this.imageResizeRatio;\r\n        }\r\n\r\n        // console.log(vertices);\r\n\r\n        const rect = cv.boundingRect(src);\r\n\r\n        src.delete();\r\n        hierarchy.delete();\r\n        contours.delete();\r\n        // transform the rectangle into a set of points\r\n        Object.keys(rect).forEach(key => {\r\n          rect[key] = rect[key] * this.imageResizeRatio;\r\n        });\r\n\r\n        let contourCoordinates;\r\n\r\n        const firstRoles: RolesArray = [this.isTop(vertices[0], [vertices[1], vertices[2], vertices[3]]) ? 'top' : 'bottom'];\r\n        const secondRoles: RolesArray = [this.isTop(vertices[1], [vertices[0], vertices[2], vertices[3]]) ? 'top' : 'bottom'];\r\n        const thirdRoles: RolesArray = [this.isTop(vertices[2], [vertices[0], vertices[1], vertices[3]]) ? 'top' : 'bottom'];\r\n        const fourthRoles: RolesArray = [this.isTop(vertices[3], [vertices[0], vertices[2], vertices[1]]) ? 'top' : 'bottom'];\r\n\r\n        const roles = [firstRoles, secondRoles, thirdRoles, fourthRoles];\r\n        const ts = [];\r\n        const bs = [];\r\n\r\n        for (let i = 0; i < roles.length; i++) {\r\n          if (roles[i][0] === 'top') {\r\n            ts.push(i);\r\n          } else {\r\n            bs.push(i);\r\n          }\r\n        }\r\n\r\n        // console.log(ts);\r\n        // console.log(bs);\r\n\r\n        if (this.isLeft(vertices[ts[0]], vertices[ts[1]])) {\r\n          roles[ts[0]].push('left');\r\n          roles[ts[1]].push('right');\r\n        } else {\r\n          roles[ts[1]].push('right');\r\n          roles[ts[0]].push('left');\r\n        }\r\n\r\n        if (this.isLeft(vertices[bs[0]], vertices[bs[1]])) {\r\n          roles[bs[0]].push('left');\r\n          roles[bs[1]].push('right');\r\n        } else {\r\n          roles[bs[1]].push('left');\r\n          roles[bs[0]].push('right');\r\n        }\r\n\r\n        // console.log(roles);\r\n\r\n        if (this.config.useRotatedRectangle\r\n          && this.pointsAreNotTheSame(vertices)\r\n        ) {\r\n          contourCoordinates = [\r\n            new PositionChangeData({x: vertices[0].x, y: vertices[0].y}, firstRoles),\r\n            new PositionChangeData({x: vertices[1].x, y: vertices[1].y}, secondRoles),\r\n            new PositionChangeData({x: vertices[2].x, y: vertices[2].y}, thirdRoles),\r\n            new PositionChangeData({x: vertices[3].x, y: vertices[3].y}, fourthRoles),\r\n          ];\r\n        } else {\r\n          contourCoordinates = [\r\n            new PositionChangeData({x: rect.x, y: rect.y}, ['left', 'top']),\r\n            new PositionChangeData({x: rect.x + rect.width, y: rect.y}, ['right', 'top']),\r\n            new PositionChangeData({x: rect.x + rect.width, y: rect.y + rect.height}, ['right', 'bottom']),\r\n            new PositionChangeData({x: rect.x, y: rect.y + rect.height}, ['left', 'bottom']),\r\n          ];\r\n        }\r\n\r\n\r\n        this.limitsService.repositionPoints(contourCoordinates);\r\n        // this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  isTop(coordinate, otherVertices): boolean {\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < otherVertices.length; i++) {\r\n      if (coordinate.y < otherVertices[i].y) {\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count >= 2;\r\n\r\n  }\r\n\r\n  isLeft(coordinate, secondCoordinate): boolean {\r\n    return coordinate.x < secondCoordinate.x;\r\n  }\r\n\r\n  private pointsAreNotTheSame(vertices: any): boolean {\r\n    return !(vertices[0].x === vertices[1].x && vertices[1].x === vertices[2].x && vertices[2].x === vertices[3].x &&\r\n      vertices[0].y === vertices[1].y && vertices[1].y === vertices[2].y && vertices[2].y === vertices[3].y);\r\n  }\r\n\r\n  /**\r\n   * apply perspective transform\r\n   */\r\n  private transform(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const dst = cv.imread(this.editedImage);\r\n\r\n        // create source coordinates matrix\r\n        const sourceCoordinates = [\r\n          this.getPoint(['top', 'left']),\r\n          this.getPoint(['top', 'right']),\r\n          this.getPoint(['bottom', 'right']),\r\n          this.getPoint(['bottom', 'left'])\r\n        ].map(point => {\r\n          return [point.x / this.imageResizeRatio, point.y / this.imageResizeRatio];\r\n        });\r\n\r\n        // get max width\r\n        const bottomWidth = this.getPoint(['bottom', 'right']).x - this.getPoint(['bottom', 'left']).x;\r\n        const topWidth = this.getPoint(['top', 'right']).x - this.getPoint(['top', 'left']).x;\r\n        const maxWidth = Math.max(bottomWidth, topWidth) / this.imageResizeRatio;\r\n        // get max height\r\n        const leftHeight = this.getPoint(['bottom', 'left']).y - this.getPoint(['top', 'left']).y;\r\n        const rightHeight = this.getPoint(['bottom', 'right']).y - this.getPoint(['top', 'right']).y;\r\n        const maxHeight = Math.max(leftHeight, rightHeight) / this.imageResizeRatio;\r\n        // create dest coordinates matrix\r\n        const destCoordinates = [\r\n          [0, 0],\r\n          [maxWidth - 1, 0],\r\n          [maxWidth - 1, maxHeight - 1],\r\n          [0, maxHeight - 1]\r\n        ];\r\n\r\n        // convert to open cv matrix objects\r\n        const Ms = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...sourceCoordinates));\r\n        const Md = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...destCoordinates));\r\n        const transformMatrix = cv.getPerspectiveTransform(Ms, Md);\r\n        // set new image size\r\n        const dsize = new cv.Size(maxWidth, maxHeight);\r\n        // perform warp\r\n        cv.warpPerspective(dst, dst, transformMatrix, dsize, cv.INTER_CUBIC, cv.BORDER_CONSTANT, new cv.Scalar());\r\n        cv.imshow(this.editedImage, dst);\r\n\r\n        dst.delete();\r\n        Ms.delete();\r\n        Md.delete();\r\n        transformMatrix.delete();\r\n\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter to the image\r\n   * @param preview - when true, will not apply the filter to the edited image but only display a preview.\r\n   * when false, will apply to editedImage\r\n   */\r\n  private applyFilter(preview: boolean): Promise<void> {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      // default options\r\n      const options = {\r\n        blur: false,\r\n        th: true,\r\n        thMode: cv.ADAPTIVE_THRESH_MEAN_C,\r\n        thMeanCorrection: 10,\r\n        thBlockSize: 25,\r\n        thMax: 255,\r\n        grayScale: true,\r\n      };\r\n      const dst = cv.imread(this.editedImage);\r\n\r\n      if (!this.config.filterEnable) {\r\n        this.selectedFilter = 'original';\r\n      }\r\n\r\n      switch (this.selectedFilter) {\r\n        case 'original':\r\n          options.th = false;\r\n          options.grayScale = false;\r\n          options.blur = false;\r\n          break;\r\n        case 'magic_color':\r\n          options.grayScale = false;\r\n          break;\r\n        case 'bw2':\r\n          options.thMode = cv.ADAPTIVE_THRESH_GAUSSIAN_C;\r\n          options.thMeanCorrection = 15;\r\n          options.thBlockSize = 15;\r\n          break;\r\n        case 'bw3':\r\n          options.blur = true;\r\n          options.thMeanCorrection = 15;\r\n          break;\r\n      }\r\n\r\n      setTimeout(async () => {\r\n        if (options.grayScale) {\r\n          cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\r\n        }\r\n        if (options.blur) {\r\n          const ksize = new cv.Size(5, 5);\r\n          cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        }\r\n        if (options.th) {\r\n          if (options.grayScale) {\r\n            cv.adaptiveThreshold(dst, dst, options.thMax, options.thMode, cv.THRESH_BINARY, options.thBlockSize, options.thMeanCorrection);\r\n          } else {\r\n            dst.convertTo(dst, -1, 1, 60);\r\n            cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY);\r\n          }\r\n        }\r\n        if (!preview) {\r\n          cv.imshow(this.editedImage, dst);\r\n        }\r\n        await this.showPreview(dst);\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * resize an image to fit constraints set in options.maxImageDimensions\r\n   */\r\n  private resize(image: HTMLCanvasElement): Promise<HTMLCanvasElement> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const src = cv.imread(image);\r\n        const currentDimensions = {\r\n          width: src.size().width,\r\n          height: src.size().height\r\n        };\r\n        const resizeDimensions = {\r\n          width: 0,\r\n          height: 0\r\n        };\r\n        if (currentDimensions.width > this.options.maxImageDimensions.width) {\r\n          resizeDimensions.width = this.options.maxImageDimensions.width;\r\n          resizeDimensions.height = this.options.maxImageDimensions.width / currentDimensions.width * currentDimensions.height;\r\n          if (resizeDimensions.height > this.options.maxImageDimensions.height) {\r\n            resizeDimensions.height = this.options.maxImageDimensions.height;\r\n            resizeDimensions.width = this.options.maxImageDimensions.height / currentDimensions.height * currentDimensions.width;\r\n          }\r\n          const dsize = new cv.Size(Math.floor(resizeDimensions.width), Math.floor(resizeDimensions.height));\r\n          cv.resize(src, src, dsize, 0, 0, cv.INTER_AREA);\r\n          const resizeResult = <HTMLCanvasElement>document.createElement('canvas');\r\n          cv.imshow(resizeResult, src);\r\n          src.delete();\r\n          this.processing.emit(false);\r\n          resolve(resizeResult);\r\n        } else {\r\n          this.processing.emit(false);\r\n          resolve(image);\r\n        }\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * display a preview of the image on the preview canvas\r\n   */\r\n  private showPreview(image?: any) {\r\n    return new Promise((resolve, reject) => {\r\n      let src;\r\n      if (image) {\r\n        src = image;\r\n      } else {\r\n        src = cv.imread(this.editedImage);\r\n      }\r\n      const dst = new cv.Mat();\r\n      const dsize = new cv.Size(0, 0);\r\n      cv.resize(src, dst, dsize, this.imageResizeRatio, this.imageResizeRatio, cv.INTER_AREA);\r\n      cv.imshow(this.previewCanvas.nativeElement, dst);\r\n      src.delete();\r\n      dst.delete();\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  // *************** //\r\n  // Utility Methods //\r\n  // *************** //\r\n  /**\r\n   * set preview canvas dimensions according to the canvas element of the original image\r\n   */\r\n  private setPreviewPaneDimensions(img: HTMLCanvasElement) {\r\n    // set preview pane dimensions\r\n    this.previewDimensions = this.calculateDimensions(img.width, img.height);\r\n    this.previewCanvas.nativeElement.width = this.previewDimensions.width;\r\n    this.previewCanvas.nativeElement.height = this.previewDimensions.height;\r\n    this.imageResizeRatio = this.previewDimensions.width / img.width;\r\n    this.imageDivStyle = {\r\n      width: this.previewDimensions.width + this.options.cropToolDimensions.width + 'px',\r\n      height: this.previewDimensions.height + this.options.cropToolDimensions.height + 'px',\r\n      'margin-left': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 + ${this.options.cropToolDimensions.width / 2}px)`,\r\n      'margin-right': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 - ${this.options.cropToolDimensions.width / 2}px)`,\r\n    };\r\n    this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n  }\r\n\r\n  /**\r\n   * calculate dimensions of the preview canvas\r\n   */\r\n  private calculateDimensions(width: number, height: number): { width: number; height: number; ratio: number } {\r\n    const ratio = width / height;\r\n\r\n    const maxWidth = this.screenDimensions.width > this.maxPreviewWidth ?\r\n      this.maxPreviewWidth : this.screenDimensions.width - 40;\r\n    const maxHeight = this.screenDimensions.height - 240;\r\n    const calculated = {\r\n      width: maxWidth,\r\n      height: Math.round(maxWidth / ratio),\r\n      ratio: ratio\r\n    };\r\n\r\n    if (calculated.height > maxHeight) {\r\n      calculated.height = maxHeight;\r\n      calculated.width = Math.round(maxHeight * ratio);\r\n    }\r\n    return calculated;\r\n  }\r\n\r\n  /**\r\n   * returns a point by it's roles\r\n   * @param roles - an array of roles by which the point will be fetched\r\n   */\r\n  private getPoint(roles: RolesArray) {\r\n    return this.points.find(point => {\r\n      return this.limitsService.compareArray(point.roles, roles);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * a class for generating configuration objects for the editor\r\n */\r\nclass ImageEditorConfig implements DocScannerConfig {\r\n  /**\r\n   * max dimensions of oputput image. if set to zero\r\n   */\r\n  maxImageDimensions: ImageDimensions = {\r\n    width: 30000,\r\n    height: 30000\r\n  };\r\n  /**\r\n   * background color of the main editor div\r\n   */\r\n  editorBackgroundColor = '#fefefe';\r\n  /**\r\n   * css properties for the main editor div\r\n   */\r\n  editorDimensions: { width: string; height: string; } = {\r\n    width: '100vw',\r\n    height: '100vh'\r\n  };\r\n  /**\r\n   * css that will be added to the main div of the editor component\r\n   */\r\n  extraCss: { [key: string]: string | number } = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0\r\n  };\r\n\r\n  /**\r\n   * material design theme color name\r\n   */\r\n  buttonThemeColor: 'primary' | 'warn' | 'accent' = 'accent';\r\n  /**\r\n   * icon for the button that completes the editing and emits the edited image\r\n   */\r\n  exportImageIcon = 'cloud_upload';\r\n  /**\r\n   * color of the crop tool\r\n   */\r\n  cropToolColor = '#FF3333';\r\n  /**\r\n   * shape of the crop tool, can be either a rectangle or a circle\r\n   */\r\n  cropToolShape: PointShape = 'circle';\r\n  /**\r\n   * dimensions of the crop tool\r\n   */\r\n  cropToolDimensions: ImageDimensions = {\r\n    width: 10,\r\n    height: 10\r\n  };\r\n  /**\r\n   * aggregation of the properties regarding point attributes generated by the class constructor\r\n   */\r\n  pointOptions: PointOptions;\r\n  /**\r\n   * aggregation of the properties regarding the editor style generated by the class constructor\r\n   */\r\n  editorStyle?: { [key: string]: string | number };\r\n  /**\r\n   * crop tool outline width\r\n   */\r\n  cropToolLineWeight = 3;\r\n  /**\r\n   * maximum size of the preview pane\r\n   */\r\n  maxPreviewWidth = 800;\r\n\r\n  constructor(options: DocScannerConfig) {\r\n    if (options) {\r\n      Object.keys(options).forEach(key => {\r\n        this[key] = options[key];\r\n      });\r\n    }\r\n\r\n    this.editorStyle = {'background-color': this.editorBackgroundColor};\r\n    Object.assign(this.editorStyle, this.editorDimensions);\r\n    Object.assign(this.editorStyle, this.extraCss);\r\n\r\n    this.pointOptions = {\r\n      shape: this.cropToolShape,\r\n      color: this.cropToolColor,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    Object.assign(this.pointOptions, this.cropToolDimensions);\r\n  }\r\n}\r\n\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {NgxDraggablePointComponent} from './components/draggable-point/ngx-draggable-point.component';\r\nimport {NgxFilterMenuComponent} from './components/filter-menu/ngx-filter-menu.component';\r\nimport {NgxShapeOutlineComponent} from './components/shape-outline/ngx-shape-outline.component';\r\nimport {NgxDocScannerComponent} from './components/image-editor/ngx-doc-scanner.component';\r\nimport {LimitsService} from './services/limits.service';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {AngularDraggableModule} from 'angular2-draggable';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OpenCVConfig} from './PublicModels';\r\nimport {NgxOpenCVModule} from 'ngx-opencv';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport {NgxOpenCVService, OpenCvConfigToken} from 'ngx-opencv';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxDraggablePointComponent,\r\n    NgxFilterMenuComponent,\r\n    NgxShapeOutlineComponent,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  imports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    CommonModule,\r\n    NgxOpenCVModule,\r\n    MatSliderModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  entryComponents: [\r\n    NgxFilterMenuComponent,\r\n  ],\r\n  providers: [\r\n    NgxOpenCVService,\r\n    LimitsService,\r\n  ]\r\n})\r\nexport class NgxDocumentScannerModule {\r\n  static forRoot(config: OpenCVConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxDocumentScannerModule,\r\n      providers: [\r\n        { provide: OpenCvConfigToken, useValue: config },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/**\r\n * describes a state object for the OpenCV module\r\n */\r\nimport {PointShape} from './PrivateModels';\r\n\r\nexport interface OpenCVState {\r\n  ready: boolean;\r\n  loading: boolean;\r\n  error: boolean;\r\n  state: string;\r\n}\r\n\r\n/**\r\n * describes an object with width and height properties\r\n */\r\nexport interface ImageDimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n/**\r\n * threshold information for automatically detecting corners\r\n */\r\nexport interface ThresholdInformation {\r\n  thresholdType: 'standard' | 'adaptive_mean' | 'adaptive_gaussian';\r\n  /**\r\n   * Non-zero value assigned to the pixels for which the condition is satisfied\r\n   */\r\n  maxValue?: number;\r\n  /**\r\n   * Size of a pixel neighborhood that is used to calculate a threshold value for the pixel: 3, 5, 7, and so on.\r\n   * Only used with adaptive threshold variants\r\n   */\r\n  blockSize?: number;\r\n  /**\r\n   *  Constant subtracted from the mean or weighted mean (see the details below).\r\n   *  Normally, it is positive but may be zero or negative as well.\r\n   *  Only used with adaptive threshold variants\r\n   */\r\n  c?: number;\r\n  /**\r\n   * threshold value. Only used with standard threshold type.\r\n   */\r\n  thresh?: number;\r\n\r\n\r\n}\r\n\r\n/**\r\n * describes a configuration object for the editor\r\n */\r\nexport interface DocScannerConfig {\r\n  /**\r\n   * whether filter options are enabled\r\n   */\r\n  filterEnable?: boolean;\r\n  /**\r\n   * max dimensions of output image. if set to zero will not resize the image\r\n   */\r\n  maxImageDimensions?: ImageDimensions;\r\n  /**\r\n   * background color of the main editor div\r\n   */\r\n  editorBackgroundColor?: string;\r\n  /**\r\n   * css properties for the main editor div\r\n   */\r\n  editorDimensions?: { width: string; height: string; };\r\n  /**\r\n   * css that will be added to the main div of the editor component\r\n   */\r\n  extraCss?: { [key: string]: string | number };\r\n  /**\r\n   * material design theme color name\r\n   */\r\n  buttonThemeColor?: 'primary' | 'warn' | 'accent';\r\n  /**\r\n   * icon for the button that completes the editing and emits the edited image\r\n   */\r\n  exportImageIcon?: string;\r\n  /**\r\n   * color of the crop tool (points and connecting lines)\r\n   */\r\n  cropToolColor?: string;\r\n  /**\r\n   * shape of the crop tool points\r\n   */\r\n  cropToolShape?: PointShape;\r\n  /**\r\n   * width and height of the crop tool points\r\n   */\r\n  cropToolDimensions?: ImageDimensions;\r\n  /**\r\n   * weight of the crop tool's connecting lines\r\n   */\r\n  cropToolLineWeight?: number;\r\n  /**\r\n   * max width of the preview pane\r\n   */\r\n  maxPreviewWidth?: number;\r\n  /**\r\n   * config threshold for auto\r\n   */\r\n  thresholdInfo?: ThresholdInformation;\r\n  /**\r\n   * whether rotated rectangle is used\r\n   */\r\n  useRotatedRectangle?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * describes a configuration object for the OpenCV service\r\n */\r\nexport interface OpenCVConfig {\r\n  /**\r\n   * path to the directory containing the OpenCV files, in the form of '/path/to/<opencv directory>'\r\n   * directory must contain the the following files:\r\n   * --<OpenCvDir>\r\n   * ----opencv.js\r\n   * ----opencv_js.wasm\r\n   */\r\n  openCVDirPath?: string;\r\n  /**\r\n   * additional callback that will run when OpenCv has finished loading and parsing\r\n   */\r\n  runOnOpenCVInit?: Function;\r\n}\r\n"]}