{"version":3,"file":"ess-ngx-opencv.mjs","sources":["../../../projects/ngx-opencv/src/lib/ngx-open-cv.service.ts","../../../projects/ngx-opencv/src/lib/ngx-opencv.module.ts","../../../projects/ngx-opencv/src/public_api.ts","../../../projects/ngx-opencv/src/ess-ngx-opencv.ts"],"sourcesContent":["import {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {OpenCVConfig, OpenCVState} from './models';\r\n\r\nexport const OpenCvConfigToken = new InjectionToken<OpenCVConfig>('OpenCV config object token');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxOpenCVService {\r\n\r\n  cvState = new BehaviorSubject<OpenCVState>({\r\n    ready: false,\r\n    error: false,\r\n    loading: true,\r\n    state: 'loading'\r\n  });\r\n  configModule: OpenCvConfigModule;\r\n\r\n  constructor(@Inject(OpenCvConfigToken) options: OpenCVConfig, private _ngZone: NgZone) {\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n    this.configModule = this.generateConfigModule(options);\r\n    this.loadOpenCv();\r\n  }\r\n\r\n  /**\r\n   * load the OpenCV script\r\n   */\r\n  loadOpenCv() {\r\n    this.cvState.next( this.newState('loading'));\r\n    // create global module variable\r\n    window['Module'] = this.configModule;\r\n\r\n    // create script element and set attributes\r\n    const script = <HTMLScriptElement> document.createElement('script');\r\n    script.setAttribute('async', '');\r\n    script.setAttribute('type', 'text/javascript');\r\n\r\n    // listen for errors\r\n    script.addEventListener('error', () => {\r\n      const err = new Error('Failed to load ' + this.configModule.scriptUrl);\r\n      this.cvState.next(this.newState('error'));\r\n      this.cvState.error(err);\r\n    }, {passive: true});\r\n\r\n    // set script url\r\n    script.src = this.configModule.scriptUrl;\r\n    // insert script as first script tag\r\n    const node = document.getElementsByTagName('script')[0];\r\n    if (node) {\r\n      node.parentNode.insertBefore(script, node);\r\n    } else {\r\n      document.head.appendChild(script);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * generates a new state object\r\n   * @param change - the new state of the module\r\n   */\r\n  private newState(change: 'loading'|'ready'|'error'): OpenCVState {\r\n    const newStateObj: OpenCVState = {\r\n      ready: false,\r\n      loading: false,\r\n      error: false,\r\n      state: ''\r\n    };\r\n    Object.keys(newStateObj).forEach(key => {\r\n      if (key !== 'state') {\r\n        if (key === change) {\r\n          newStateObj[key] = true;\r\n          newStateObj.state = key;\r\n        } else {\r\n          newStateObj[key] = false;\r\n        }\r\n      }\r\n    });\r\n    return newStateObj;\r\n  }\r\n\r\n  /**\r\n   * generates a config module for the global Module object\r\n   * @param options - configuration options\r\n   */\r\n  private generateConfigModule(options: OpenCVConfig): OpenCvConfigModule {\r\n    return {\r\n      scriptUrl: options.openCVDirPath ? `${options.openCVDirPath}/opencv.js` : `/assets/opencv/opencv.js`,\r\n      wasmBinaryFile: 'opencv_js.wasm',\r\n      usingWasm: true,\r\n      onRuntimeInitialized: () => {\r\n        this._ngZone.run(() => {\r\n          console.log('openCV Ready');\r\n          this.cvState.next(this.newState('ready'));\r\n          if (options.runOnOpenCVInit) {\r\n            options.runOnOpenCVInit();\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * describes the global Module object that is used to initiate OpenCV.js\r\n */\r\ninterface OpenCvConfigModule {\r\n  scriptUrl: string;\r\n  wasmBinaryFile: string;\r\n  usingWasm: boolean;\r\n  onRuntimeInitialized: Function;\r\n}\r\n\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { OpenCVConfig } from './models';\r\nimport { NgxOpenCVService, OpenCvConfigToken } from './ngx-open-cv.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [],\r\n  providers: [NgxOpenCVService]\r\n})\r\nexport class NgxOpenCVModule {\r\n  static forRoot(config: OpenCVConfig): ModuleWithProviders<NgxOpenCVModule> {\r\n    return {\r\n      ngModule: NgxOpenCVModule,\r\n      providers: [{ provide: OpenCvConfigToken, useValue: config }]\r\n    };\r\n  }\r\n}\r\n\r\nconst a = 0;\r\n","\r\nexport * from './lib/ngx-opencv.module';\r\nexport * from './lib/models';\r\nexport * from './lib/ngx-open-cv.service';\r\nexport const ESS_NGX_OPENCV_API = \"@ess/ngx-opencv\";\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}